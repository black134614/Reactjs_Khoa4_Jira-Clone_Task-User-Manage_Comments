{"version":3,"sources":["util/constants/settingSystem.js","pages/Todolist/bg.png","components/GlobalSetting/LoadingComponent/LoadingComponent.module.css","assets/imgLoading/loading.gif","pages/BaiTapToDoListSaga/bg.png","assets/img/download.jfif","components/GlobalSetting/LoadingComponent/LoadingComponent.js","components/Home/Header/Header.js","pages/About/About.js","pages/BaiTapToDoListSaga/BaiTapToDoListSaga.js","redux/constants/ToDoListConst.js","util/history.js","pages/Contact/Contact.js","pages/CyberBugs/LoginCyberBugs/LoginCyberBugs.js","redux/actions/CyberBugsActions.js","redux/constants/Cyberbugs/Cyberbugs.js","HOC/Modal/SlideDown.js","pages/Login/Login.js","pages/Register/Register.js","pages/DemoHOCModal/DemoHOCModal.js","pages/Detail/Detail.js","pages/Home/Home.js","pages/PageNotFound/PageNotFound.js","pages/Profile/Profile.js","pages/Todolist/Todolist.js","redux/actions/ToDoListAction.js","pages/Todolist/ToDoListRedux.js","pages/Todolist/TodolistRFC.js","templates/HomeTemplate/HomeTemplate.js","templates/HomeTemplate/UserLoginTemplate.js","components/Cyberbugs/Main/ContentMain.js","redux/constants/Cyberbugs/TaskConstants.js","redux/constants/Cyberbugs/CommentConstants.js","components/Cyberbugs/Main/HeaderMain.js","components/Cyberbugs/Main/InfoMain.js","components/Cyberbugs/MenuCyberbugs.js","redux/constants/Cyberbugs/StatusConstant.js","components/Cyberbugs/ModalCyberBugs.js/ModalCyberBugs.js","redux/constants/Cyberbugs/PriorityConstants.js","redux/constants/Cyberbugs/TaskTypeConstants.js","components/Forms/FormCreateTask/FormCreateTask.js","redux/constants/Cyberbugs/ProjectCyberBugsConstants.js","redux/constants/Cyberbugs/UsersContants.js","components/Cyberbugs/SidebarCyberbugs.js","templates/HomeTemplate/CyberbugsTemplate.js","pages/CyberBugs/ProjectDetail/indexCyberBugs.js","pages/CyberBugs/CreateProject/CreateProject.js","components/Forms/FormEditProject.js/FormEditProject.js","pages/CyberBugs/ProjectManagement/ProjectManagement.js","HOC/CyberbugsHOC/DrawerCyberBugs.js","pages/DemoDragDrop/DemoDragDrop.js","pages/Demo/Demo.js","pages/DragAndDropDnD/DragAndDropDnD.js","pages/CyberBugs/SignupCyberBugs/SignupCyberBugs.js","components/Forms/FormEditUser/FormEditUser.js","pages/CyberBugs/UsersManagement/UsersManagement.js","App.js","serviceWorker.js","redux/reducers/ToDoListReducer.js","redux/reducers/LoadingReducer.js","redux/reducers/ModalReducer.js","services/ToDoListService.js","redux/sagas/ToDoListSaga.js","redux/constants/LoadingConst.js","services/CyberbugsService.js","services/baseService.js","services/UserService.js","util/Notification/notificationCyberbugs.js","redux/sagas/Cyberbugs/UserCyberbugsSaga.js","redux/sagas/Cyberbugs/ProjectCategorySaga.js","services/ProjectService.js","redux/sagas/Cyberbugs/ProjectSaga.js","services/TaskTypeService.js","redux/sagas/Cyberbugs/TaskTypeSaga.js","services/PriorityService.js","redux/sagas/Cyberbugs/PrioritySaga.js","services/TaskService.js","redux/sagas/Cyberbugs/TaskSaga.js","services/CommentService.js","redux/sagas/Cyberbugs/CommentSaga.js","services/StatusService.js","redux/sagas/Cyberbugs/StatusSaga.js","redux/sagas/rootSaga.js","redux/reducers/HistoryReducer.js","redux/reducers/UserCyberBugsReducer.js","redux/reducers/ProjectCategoryReducer.js","redux/reducers/ProjectCyberBugsReducer.js","redux/reducers/DrawerCyberbugs.js","redux/reducers/ProjectReducer.js","redux/reducers/TaskTypeReducer.js","redux/reducers/PriorityReducer.js","redux/reducers/StatusReducer.js","redux/reducers/TaskReducer.js","redux/reducers/CommentReducer.js","redux/configStore.js","index.js"],"names":["DOMAIN","DOMAIN_CYBERBUG","TOKEN","USER_LOGIN","STATUS_CODE","SUCCESS","NOT_FOUND","SERVER_ERROR","module","exports","LoadingComponent","useSelector","state","LoadingReducer","isLoading","className","styleLoading","bgLoading","src","require","Header","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","activeStyle","fontWeight","href","aria-haspopup","aria-labelledby","placeholder","About","BaiTapToDoListSaga","props","dispatch","useDispatch","taskList","ToDoListReducer","useState","values","taskName","errors","setState","addTask","e","preventDefault","useEffect","delTask","console","log","onClick","onSubmit","name","onChange","target","value","newValues","newErrors","test","trim","filter","item","status","map","index","key","history","createBrowserHistory","Contact","push","LoginCyberBugsWithFormik","withFormik","mapPropsToValues","email","password","validationSchema","Yup","shape","required","min","max","handleSubmit","setSubmitting","userLogin","singinCyberbugAction","displayName","touched","handleChange","handleBlur","style","height","window","innerHeight","fontSize","width","minWidth","size","prefix","UserOutlined","LockOutlined","htmlType","backgroundColor","color","textAlign","padding","icon","TwitterOutlined","connect","SlideDown","Component","propsSpring","useSpring","marginTop","from","config","duration","div","Login","userName","passWord","setUserLogin","event","newUserLogin","valid","goBack","localStorage","setItem","JSON","stringify","alert","when","message","location","RegisterWithFormik","phoneNumber","maxLength","PhoneOutlined","InfoCircleOutlined","DemoHOCModal","LoginWithSlideDown","Detail","match","params","path","Home","UserLoginCyberBugsReducer","avatar","PageNotFound","url","Profile","getItem","Todolist","getTaskList","promise","Axios","method","then","result","data","catch","err","response","renderTaskToDo","checkTask","renderTaskToDoDone","rejectTask","res","this","getTaskListApi","a","ToDoListRedux","rejectTaskApi","checkTaskApi","deleteTaskApi","TodolistRFC","HomeTemplate","restParam","render","propsRoute","Sider","Layout","Footer","Content","UserLoginTemplate","Math","round","innerWidth","setSize","onresize","restRoute","backgroundImage","backgroundSize","ContentMain","projectDetail","handleDragEnd","parse","draggableId","projectId","taskId","source","destination","droppableId","taskUpdateStatus","display","onDragEnd","lstTask","taskListDetail","statusId","provided","statusName","ref","innerRef","droppableProps","lstTaskDeTail","task","toString","draggableProps","dragHandleProps","priorityTask","priority","assigness","mem","alt","renderCardTaskList","HeaderMain","aria-current","projectName","InfoMain","ReactHtmlParser","description","members","user","renderAvatar","marginLeft","MenuCyberbugs","Select","Option","ModalCyberBugs","taskDetailModal","TaskReducer","arrStatus","StatusReducer","arrPriority","PriorityReducer","arrTaskType","TaskTypeReducer","ProjectReducer","visibleEditor","setVisibleEditor","historyContent","setHistoryContent","content","setContent","commentList","CommentReducer","editCommentId","setEditCommentId","actionType","handelChangeComment","tabIndex","role","aria-hidden","typeId","tp","taskType","paddingRight","cursor","data-dismiss","jsxDescription","initialValue","init","selector","menubar","plugins","toolbar","onEditorChange","editor","renderDescription","contentComment","closest","querySelector","newComnent","setTimeout","renderCommentBlock","length","slice","reverse","commentDetail","marginBottom","defaultValue","newCommentContent","commentId","encodeURIComponent","title","onConfirm","okText","cancelText","userId","options","findIndex","us","label","optionFilterProp","onSelect","userSelected","find","priorityId","originalEstimate","timeTrackingSpent","timeTrackingRemaining","Number","percent","aria-valuenow","aria-valuemin","aria-valuemax","justifyContent","renderTimeTracking","children","i","frmCreateTask","enableReinitialize","arrProject","listUserAsign","taskObject","ProjectCyberBugsReducer","arrUser","userOptions","setFieldValue","setValues","React","timeTracking","setTimetracking","submitFunction","keyWord","idProject","project","statusItem","mode","SidebarCyberbugs","collapsed","trigger","collapsible","BarsOutlined","theme","defaultSelectedKeys","Item","PlusOutlined","SearchOutlined","CyberbugsTemplate","IndexCyberBugs","createProjectForm","categoryId","arrProjectCategory","newProject","ProjectCategoryReducer","projectCategoryName","EditProjectForm","projectEdit","prjectUpdate","disabled","ProjectManagement","projectList","userSearch","setValue","searchRef","useRef","filteredInfo","sortedInfo","columns","dataIndex","sorter","item2","item1","sortDirections","text","record","projectName1","toLowerCase","categoryName1","categoryName","creator","creator1","member","placement","borderRadius","userProject","valueSelect","option","onSearch","current","clearTimeout","projectEditModel","FormOutlined","DeleteOutlined","order","columnKey","rowKey","dataSource","pagination","filters","DrawerCyberBugs","drawerReducer","visible","ComponentContentDrawer","callBackSubmit","onClose","bodyStyle","paddingBottom","footer","marginRight","DemoDragDrop","setTaskList","tagDrag","tagDragEnter","bottom","reset","set","handleDragStart","handleDragEnter","taskDragEnter","taskListUpdate","indexDragTag","indexDragEnter","temp","onDragOver","stopPropagation","onDrop","cssDragTag","position","interpolate","numBottom","onDragStart","onDragEnter","draggable","Demo","rotate","cssDrag","cssDragEnter","transform","r","onDragLeave","DragAndDropDnD","toDo","items","inProgress","done","itemCopy","splice","_","statusTask","SignupWithFormik","newUser","EditUserForm","Search","Input","extra","UsersManagement","filterSearch","b","class","allowClear","enterButton","searchUser","App","useHistory","exact","LoginCyberBugs","SignUpCyberBugs","indexCyberBugs","CreateProject","component","Boolean","hostname","initialState","stateDefault","toDoListService","getTaskApi","addTaskApi","checkDoneTask","getTaskApiAction","theoDoiActionGetTaskApi","addTaskApiAction","theoDoiActionAddTaskApi","theoDoiActionDeleteTask","checkDoneTaskApi","theoDoiDoneTask","theoDoiRejectTask","action","put","call","delay","takeLatest","default","cyberbugsService","headers","projectUpdate","baseService","model","post","get","delete","userService","getUser","assignUserProject","deleteUserFromProject","getUserByProjectId","signupUser","getAllUser","undefined","editUser","deleteUser","notifiFunction","notification","signinSaga","theoDoiSignin","getUserSaga","theoDoiGetUser","addUserProjectSaga","theoDoiAddUserProject","removeUserProjectSaga","theoDoiRemoveUserProject","getUserByProjectIdSaga","theoDoiGetUserByProjectIdSaga","signupUserSaga","theoDoiSignupUser","getAllUserSaga","theoDoiGetAllUserSaga","editUserSaga","theoDoiEditUserSaga","deleteUserSaga","theoDoiDeleteUserSaga","accessToken","lstUserSearch","statusCode","getAllProjectCategorySaga","theoDoigetAllProjectCategory","projectService","getAllProject","deleteProject","getProjectDetail","createProjectSaga","theoDoiCreateProjectSaga","getListProjectSaga","theoDoiGetListProjectSaga","updateProjectSaga","theoDoiUpdateProjectSaga","deleteProjectSaga","theoDoiDeleteProject","getProjectDetailSaga","theoDoiGetProjectDetail","getProjectAllSaga","theoDoiGetAllProjectSaga","taskTypeService","getAllTaskType","getAllTaskTypeSaga","theoDoiGetAllTaskTypeSaga","priorityService","getAllPriority","getAllPrioritySaga","theoDoiGetAllPriority","taskService","createTask","getTaskDetail","updateStatusTask","taskStatusUpdate","updateTask","taskUpdate","createTaskSaga","theoDoiCreateTaskSaga","getTaskDetailSaga","theoDoiGetTaskDetailSaga","updateTaskStatusSaga","theoDoiUpdateTaskStatusSaga","updateTaskSaga","theoDoiUdpateTask","handelChangePostApi","theoDoiHandleChangePostApi","select","taskUpdateApi","commentService","getAllComment","deleteComment","insertComment","updateComment","getAllCommentByTaskId","getAllCommentSaga","theoDoigetAllCommentSaga","deleteCommentSaga","theoDoideleteCommentSaga","insertCommentSaga","theoDoiinsertCommentSaga","updateCommentSaga","theoDoiupdateCommentSaga","statusService","getAllStatus","getAllStatusSaga","theoDoiGetAllStatusSaga","rootSaga","all","ToDoListSaga","Cyberbugs","ProjectCategorySaga","ProjectSaga","StatusSaga","TaskTypeSaga","PrioritySaga","TaskSaga","CommentSaga","historyState","usLogin","propsValue","middleWareSaga","createMiddleWareSaga","rootReducer","combineReducers","ModalReducer","HistoryReducer","store","createStore","applyMiddleware","reduxThunk","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a6630ca6.chunk.js","sourcesContent":["export const DOMAIN = 'http://svcy.myclass.vn/api';\r\n\r\nexport const DOMAIN_CYBERBUG = 'https://casestudy.cyberlearn.vn/api';\r\n\r\nexport const TOKEN = 'ACCESSTOKEN';\r\nexport const USER_LOGIN = 'USER_LOGIN';\r\n\r\nexport const STATUS_CODE = {\r\n    SUCCESS : 200,\r\n    NOT_FOUND: 404,\r\n    SERVER_ERROR:500\r\n}\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgLoading\":\"LoadingComponent_bgLoading__30--h\"};","module.exports = __webpack_public_path__ + \"static/media/loading.504b535c.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","module.exports = __webpack_public_path__ + \"static/media/download.1c8cee9f.jfif\";","import React from 'react'\r\nimport styleLoading from './LoadingComponent.module.css';\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function LoadingComponent() {\r\n\r\n    const { isLoading } = useSelector(state => state.LoadingReducer)\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styleLoading.bgLoading}>\r\n                <img src={require('../../../assets/imgLoading/loading.gif')} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Header.css'\r\nexport default function Header() {\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            <NavLink className=\"navbar-brand\" to=\"/\">Cyberlearn</NavLink>\r\n            <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\r\n            <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/home\">Home </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/about\">About</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/contact\">Contact</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/profile\">profile</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/demohocmodal\">Demo HOC </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Bài tập</a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\r\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrfc\">To do list rfc</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrcc\">To do list rcc</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to=\"/todolistredux\">To do list redux</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to=\"/todolistsaga\">To do list saga</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to=\"/dragdrop\">DemoDragDrop</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to=\"/demo\">Demo</NavLink>\r\n                            <NavLink className=\"dropdown-item\" to=\"/demodragdropdnd\">Drag Drop DnD</NavLink>\r\n                            \r\n                            \r\n                        </div>\r\n                    </li>\r\n\r\n                </ul>\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            About\r\n        </div>\r\n    )\r\n}\r\n","import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { ADD_TASK_API, CHECK_TASK_API, DELETE_TASK_API, GET_TASKLIST_API, REJECT_TASK_API } from '../../redux/constants/ToDoListConst';\r\n\r\n\r\nexport default function BaiTapToDoListSaga(props) {\r\n\r\n    const dispatch = useDispatch(); \r\n    const {taskList} = useSelector(state => state.ToDoListReducer)\r\n\r\n\r\n    let [state, setState] = useState({\r\n        taskList: [],\r\n        values: {\r\n            taskName: ''\r\n        },\r\n        errors: {\r\n            taskName: ''\r\n        }\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let { value, name } = e.target;\r\n        let newValues = { ...state.values };\r\n\r\n        newValues = { ...newValues, [name]: value };\r\n\r\n        let newErrors = { ...state.errors };\r\n\r\n        let regexString = /^[a-z A-Z]+$/;\r\n\r\n        if (!regexString.test(value) || value.trim() === '') {\r\n            newErrors[name] = name + ' invalid !';\r\n        } else {\r\n            newErrors[name] = '';\r\n        }\r\n\r\n\r\n        setState({\r\n            ...state,\r\n            values: newValues,\r\n            errors: newErrors\r\n        })\r\n    }\r\n\r\n\r\n    const getTaskList = () => {\r\n        //Dispatch action saga\r\n        dispatch({\r\n            type:GET_TASKLIST_API,\r\n           \r\n        })\r\n    }\r\n\r\n    const addTask = (e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type:ADD_TASK_API,\r\n            taskName: state.values.taskName\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Gọi hàm getTaskList\r\n        getTaskList();\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    //Xử lý reject task\r\n    const rejectTask = (taskName)=>{\r\n        dispatch({\r\n            type:REJECT_TASK_API,\r\n            taskName\r\n        })\r\n\r\n    }\r\n\r\n    //Xử lý done task\r\n   const  checkTask = (taskName) => {\r\n      dispatch({\r\n          type:CHECK_TASK_API,\r\n          taskName\r\n      })\r\n    }\r\n\r\n\r\n    //Hàm xử lý xóa task\r\n    const delTask = (taskName) => {\r\n        console.log(taskName)\r\n        dispatch({\r\n            type:DELETE_TASK_API,\r\n            taskName:taskName\r\n        })\r\n    }\r\n\r\n\r\n    const renderTaskToDo = () => {\r\n        return taskList.filter(item => !item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={() => {\r\n                        checkTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-check-circle\" />\r\n                        <i className=\"fas fa-check-circle\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n    const renderTaskToDoDone = () => {\r\n        return taskList.filter(item => item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={() => {\r\n                        rejectTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-undo\" />\r\n                        <i className=\"fas fa-undo\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <button className=\"btn btn-success\" onClick={()=>{\r\n                dispatch({\r\n                    type:'getTaskApiAction'\r\n                })\r\n            }}>Dispatch action saga getTaskAPI</button>\r\n            <div className=\"card__header\">\r\n                <img src={require('./bg.png')} />\r\n            </div>\r\n            {/* <h2>hello!</h2> */}\r\n            <form className=\"card__body\" onSubmit={addTask}>\r\n                <div className=\"card__content\">\r\n                    <div className=\"card__title\">\r\n                        <h2>My Tasks</h2>\r\n                        <p>September 9,2020</p>\r\n                    </div>\r\n                    <div className=\"card__add\">\r\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\r\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\r\n                            <i className=\"fa fa-plus\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"card__todo\">\r\n                        {/* Uncompleted tasks */}\r\n                        <ul className=\"todo\" id=\"todo\">\r\n                            {renderTaskToDo()}\r\n                        </ul>\r\n                        {/* Completed tasks */}\r\n                        <ul className=\"todo\" id=\"completed\">\r\n                            {renderTaskToDoDone()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n","//-----------action----------\r\nexport const GET_TASK_API = 'GET_TASK_API';\r\n\r\n//---------------saga--------------\r\n\r\nexport const GET_TASKLIST_API = 'GET_TASKLIST_API';\r\nexport const ADD_TASK_API = 'ADD_TASK_API';\r\nexport const CHECK_TASK_API = 'CHECK_TASK_API';\r\nexport const DELETE_TASK_API = 'DELETE_TASK_API';\r\nexport const REJECT_TASK_API = 'REJECT_TASK_API';\r\n\r\n\r\n\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();\r\n","import React from 'react'\r\nimport { history } from '../../util/history'\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <div>\r\n            liên hệ\r\n          <button onClick={()=>{history.push('/demohocmodal')}}>123</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Input } from 'antd';\r\nimport { UserOutlined, LockOutlined, FacebookOutlined, TwitterOutlined } from '@ant-design/icons';\r\nimport { withFormik, Formik } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport { USER_SIGNIN_API } from '../../../redux/constants/Cyberbugs/Cyberbugs';\r\nimport { singinCyberbugAction } from '../../../redux/actions/CyberBugsActions';\r\nimport { NavLink } from 'react-router-dom';\r\nfunction LoginCyberBugs(props) {\r\n\r\n\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"container\" style={{ height: window.innerHeight }} >\r\n            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ height: window.innerHeight }} >\r\n                <h3 className=\"text-center\" style={{ fontWeight: 300, fontSize: 35 }}>Login cyberbugs</h3>\r\n                <div className=\"d-flex mt-3\" >\r\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} name=\"email\" size=\"large\" placeholder=\"email\" prefix={<UserOutlined />} />\r\n                </div>\r\n                <div className=\"text-danger\">{errors.email}</div>\r\n                <div className=\"d-flex mt-3\">\r\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} type=\"password\" name=\"password\" size=\"large\" placeholder=\"password\" prefix={<LockOutlined />} />\r\n                </div>\r\n                <div className=\"text-danger\">{errors.password}</div>\r\n\r\n                <Button htmlType=\"submit\" size=\"large\" style={{ minWidth: 300, backgroundColor: 'rgb(102,117,223)', color: '#fff' }} className=\"mt-5\">Login</Button>\r\n                <div className='mt-2'>If you dont't have account? Let's register.</div>\r\n                <NavLink to='/signup' style={{ minWidth: 300, backgroundColor: 'rgb(102,117,223)', color: '#fff', textAlign: 'center', padding: '8px', fontSize: '16px' }} className=\"mt-2\">Register</NavLink>\r\n\r\n                <div className=\"social mt-3 d-flex\">\r\n                    <Button style={{ backgroundColor: 'rgb(59,89,152)' }} shape=\"circle\" size={\"large\"}>\r\n                        <span className=\"font-weight-bold\" style={{ color: '#fff' }} >F</span>\r\n                    </Button>\r\n                    <Button type=\"primary ml-3\" shape=\"circle\" icon={<TwitterOutlined />} size={\"large\"}>\r\n\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginCyberBugsWithFormik = withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().required('Email is required!').email('email is invalid!'),\r\n        password: Yup.string().min(6, 'password must have min 6 characters').max(32, 'password  have max 32 characters')\r\n\r\n    }),\r\n    handleSubmit: ({ email, password }, { props, setSubmitting }) => {\r\n\r\n        // let action = {\r\n        //     type:USER_SIGNIN_API,\r\n        //     userLogin: {\r\n        //         email:values.email,\r\n        //         password:values.password\r\n        //     }\r\n        // }\r\n\r\n        setSubmitting(true);\r\n        props.dispatch(singinCyberbugAction(email, password));\r\n\r\n        // console.log(props)\r\n        // console.log(values);\r\n\r\n    },\r\n    displayName: 'LoginCyberBugs',\r\n})(LoginCyberBugs);\r\n\r\n\r\n\r\n\r\nexport default connect()(LoginCyberBugsWithFormik);","import { USER_SIGNIN_API } from \"../constants/Cyberbugs/Cyberbugs\"\r\n\r\n\r\n\r\nexport const singinCyberbugAction = (email, password) => {\r\n    return {\r\n        type: USER_SIGNIN_API,\r\n        userLogin: {\r\n            email: email,\r\n            password: password\r\n        }\r\n    }\r\n}","export const USER_SIGNIN_API = 'USER_SIGNIN_API';\r\n\r\n\r\n\r\n//------------------login ------\r\nexport const USLOGIN = 'USLOGIN';\r\n\r\n\r\n//-------------get project category ---------\r\n\r\n\r\nexport const GET_ALL_PROJECT_CATEGORY_SAGA = 'GET_ALL_PROJECT_CATEGORY_SAGA';\r\n\r\n\r\nexport const GET_ALL_PROJECT_CATEGORY = 'GET_ALL_PROJECT_CATEGORY';","import React from 'react'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\n\r\nexport default function SlideDown(Component) {\r\n\r\n    const propsSpring = useSpring({\r\n        to: {\r\n            marginTop: '0'\r\n        }, from: {\r\n            marginTop: '-100px'\r\n\r\n        },config: {\r\n            duration:500\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <animated.div style={propsSpring}>\r\n                <Component />\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Prompt } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n    const [userLogin,setUserLogin] = useState({userName:'',passWord:'',status:false})\r\n\r\n\r\n    // console.log(userLogin)\r\n    const handleChange = (event) => {\r\n        const {name,value} = event.target;\r\n\r\n        const newUserLogin = {\r\n            ...userLogin,\r\n            [name]:value\r\n        };\r\n\r\n\r\n        let valid = true;\r\n        for(let key in newUserLogin) {\r\n            if(key !== 'status') {\r\n                if(newUserLogin[key].trim()===''){\r\n                    valid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!valid) {\r\n            newUserLogin.status = true;\r\n        }else {\r\n            newUserLogin.status = false;\r\n        }\r\n\r\n        setUserLogin(newUserLogin);\r\n    }\r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n        if(userLogin.userName === 'cyberlearn' && userLogin.passWord==='cyberlearn') {\r\n            //Thành công thì chuyển về trang trước đó\r\n            // props.history.goBack();\r\n            //Chuyển đến trang chỉ định sau khi xử lý\r\n            // Chuyển hướng đến path tương ứng\r\n            //  props.history.push('/home');\r\n            //replace thay đổi nội dung path tương ứng\r\n            // props.history.replace('/home');\r\n            props.history.goBack();\r\n            localStorage.setItem('userLogin',JSON.stringify(userLogin))\r\n\r\n        }else {\r\n            alert('Login fail !')\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"container\" onSubmit={handleLogin}>\r\n            <h3 className=\"display-4\">Login</h3>\r\n            <div className=\"form-group\">\r\n                <p>User Name</p>\r\n                <input name=\"userName\" className=\"form-control\" onChange={handleChange}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Password</p>\r\n                <input name=\"passWord\" className=\"form-control\" onChange={handleChange}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <button className=\"btn btn-success\">Đăng nhập</button>\r\n            </div>\r\n            <Prompt when={userLogin.status} message={(location) => {\r\n                return 'Bạn có chắc muốn rời khỏi trang này !'\r\n            }} />\r\n        </form>\r\n    )\r\n}\r\n","import { withFormik } from 'formik';\r\nimport React from 'react';\r\nimport { connect} from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { Button, Input } from 'antd';\r\nimport { UserOutlined, LockOutlined, InfoCircleOutlined, PhoneOutlined, FacebookOutlined } from '@ant-design/icons';\r\n\r\n\r\nfunction Register(props) {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"container\" >\r\n            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ height: window.innerHeight }} >\r\n                <h3 className=\"text-center\" style={{ fontWeight: 300, fontSize: 35 }}>Sign up</h3>\r\n                <div className=\"d-flex mt-3\" >\r\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} name=\"email\" size=\"large\" placeholder=\"email\" prefix={<UserOutlined />} />\r\n                </div>\r\n                <div className=\"text-danger\">{errors.email}</div>\r\n                <div className=\"d-flex mt-3\">\r\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} type=\"text\" name=\"password\" size=\"large\" placeholder=\"password\" prefix={<LockOutlined />} />\r\n                </div>\r\n                <div className=\"text-danger\">{errors.password}</div>\r\n                <div className=\"d-flex mt-3\">\r\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} type=\"text\" name=\"phoneNumber\" size=\"large\" placeholder=\"phone number\" maxLength={13} prefix={<PhoneOutlined />} />\r\n                </div>\r\n                <div className=\"text-danger\">{errors.phoneNumber}</div>\r\n                <div className=\"d-flex mt-3\">\r\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} type=\"text\" name=\"name\" size=\"large\" placeholder=\"name\" prefix={<InfoCircleOutlined />} />\r\n                </div>\r\n                <div className=\"text-danger\">{errors.name}</div>\r\n\r\n                <Button htmlType=\"submit\" size=\"large\" style={{ minWidth: 300, backgroundColor: 'rgb(102,117,223)', color: '#fff' }} className=\"mt-5\">Sign up</Button>\r\n                <div className='mt-2'>If you have account? Let's login.</div>\r\n                <Button htmlType=\"button\" size=\"large\" style={{ minWidth: 300, backgroundColor: 'rgb(102,117,223)', color: '#fff' }} className=\"mt-2\">Login</Button>\r\n\r\n\r\n                <div className=\"social mt-3 d-flex\">\r\n                    <Button style={{ backgroundColor: 'rgb(59,89,152)' }} shape=\"circle\" size={\"large\"}>\r\n                        <span className=\"font-weight-bold\" style={{ color: '#fff' }} >F</span>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\nconst RegisterWithFormik = withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: '',\r\n        phoneNumber: '',\r\n        name: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().required('Email is required!').email('email is invalid!'),\r\n        password: Yup.string().min(6, 'password must have min 6 characters').max(32, 'password  have max 32 characters').required('password is required!'),\r\n        phoneNumber: Yup.string().min(10, 'phone number must have 10 number!').max(32, 'password  have max 32 characters'),\r\n        name: Yup.string().required('name is required!')\r\n    }),\r\n    handleSubmit: ({ email, password, phoneNumber, name }, { props, setSubmitting }) => {\r\n\r\n        // let action = {\r\n        //     type:USER_SIGNIN_API,\r\n        //     userLogin: {\r\n        //         email:values.email,\r\n        //         password:values.password\r\n        //     }\r\n        // }\r\n\r\n        setSubmitting(true);\r\n        // props.dispatch(singinCyberbugAction(email,password));\r\n\r\n        // console.log(props)\r\n        // console.log(values);\r\n\r\n    },\r\n    handleChange: (phoneNumber) => {\r\n        console.log(\"chay haldle change\")\r\n    },\r\n\r\n    displayName: 'Register To Cyberbugs',\r\n})(Register);\r\n\r\nexport default connect()(RegisterWithFormik);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport SlideDown from '../../HOC/Modal/SlideDown';\r\nimport Login from '../Login/Login';\r\nimport Register from '../Register/Register';\r\n\r\n\r\n\r\n\r\nexport default function DemoHOCModal() {\r\n    const LoginWithSlideDown = () =>  new SlideDown(Login);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div>\r\n            {/* Button trigger modal */}\r\n            <button onClick={() => {\r\n                dispatch({\r\n                    type:'OPEN_FORM',\r\n                    Component: <Login />\r\n                })\r\n\r\n\r\n            }} type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modelId\">\r\n                Đăng nhập\r\n            </button>\r\n\r\n            <button onClick={() => {\r\n                dispatch({\r\n                    type:'OPEN_FORM',\r\n                    Component:<Register />\r\n                })\r\n\r\n            }} type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modelId\">\r\n                Đăng ký\r\n            </button>\r\n\r\n            <LoginWithSlideDown />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Detail(props) {\r\n\r\n    return (\r\n        <div>\r\n            Giá trị tham số: {props.match.params.id}\r\n            <br />\r\n            Path name hiện tại: {props.match.path}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function Home(props) {\r\n    const userLogin = useSelector(state => state.UserLoginCyberBugsReducer.userLogin)\r\n    return (\r\n        <div>\r\n            {userLogin?.name}\r\n            <img src={userLogin?.avatar} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function PageNotFound(props) {\r\n    return (\r\n        <div>\r\n            Không tìm thấy trang {props.match.url}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function Profile(props) {\r\n\r\n\r\n    if (localStorage.getItem('userLogin')) {\r\n        return (\r\n            <div>\r\n                profile\r\n            </div>\r\n        )\r\n    }else {\r\n        alert('Vui lòng đăng nhập để vào trang này !');\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport style from './Todolist.css'\r\n\r\nexport default class Todolist extends Component {\r\n\r\n    state = {\r\n        taskList: [],\r\n        values: {\r\n            taskName: ''\r\n        },\r\n        errors: {\r\n            taskName: ''\r\n        }\r\n    }\r\n\r\n    getTaskList = () => {\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\r\n            method: 'GET'\r\n        });\r\n\r\n        promise.then((result) => {\r\n            console.log(result.data);\r\n            //Nếu gọi api lấy về kết quả thành công \r\n            //=> set lại state của component\r\n            this.setState({\r\n                taskList: result.data\r\n            })\r\n\r\n            console.log('thành công')\r\n        });\r\n\r\n\r\n        promise.catch((err) => {\r\n            console.log('thất bại')\r\n\r\n            console.log(err.response.data)\r\n        });\r\n    }\r\n\r\n    renderTaskToDo = () => {\r\n        return this.state.taskList.filter(item => !item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        this.delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={()=>{\r\n                        this.checkTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-check-circle\" />\r\n                        <i className=\"fas fa-check-circle\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n    \r\n    renderTaskToDoDone = () => {\r\n        return this.state.taskList.filter(item => item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        this.delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button  type=\"button\" className=\"complete\" onClick={()=>{\r\n                        this.rejectTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-undo\" />\r\n                        <i className=\"fas fa-undo\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n    //Xử lý reject task\r\n    rejectTask = (taskName)=>{\r\n        let promise = Axios({\r\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\r\n            method:'PUT'\r\n        });\r\n        \r\n        promise.then(res=>{\r\n            alert(res.data);\r\n            this.getTaskList();\r\n        });\r\n\r\n        promise.catch(err=>{\r\n            alert(err.response.data);\r\n        })\r\n\r\n    }\r\n\r\n    //Xử lý done task\r\n    checkTask = (taskName) => {\r\n        let promise = Axios({\r\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\r\n            method:'PUT'\r\n        });\r\n\r\n        promise.then(res=>{\r\n            alert(res.data);\r\n            this.getTaskList();\r\n        });\r\n\r\n        promise.catch(err=>{\r\n            alert(err.response.data);\r\n        })\r\n    }\r\n\r\n\r\n    //Hàm xử lý xóa task\r\n    delTask = (taskName) => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        promise.then(result => {\r\n            alert(result.data);\r\n            this.getTaskList();\r\n        });\r\n\r\n        promise.catch(errors => {\r\n            alert(errors.response.data)\r\n        })\r\n    }\r\n\r\n\r\n    //Hàm sẽ tự động thực thi sau khi nội dung component được render\r\n    componentDidMount() {\r\n        this.getTaskList();\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        let { value, name } = e.target;\r\n        console.log(value, name);\r\n        let newValues = { ...this.state.values };\r\n\r\n        newValues = { ...newValues, [name]: value };\r\n\r\n        let newErrors = { ...this.state.errors };\r\n\r\n        let regexString = /^[a-z A-Z]+$/;\r\n\r\n        if (!regexString.test(value) || value.trim() === '') {\r\n            newErrors[name] = name + ' invalid !';\r\n        } else {\r\n            newErrors[name] = '';\r\n        }\r\n\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            values: newValues,\r\n            errors: newErrors\r\n        })\r\n    }\r\n\r\n    addTask = (e) => {\r\n        e.preventDefault(); //Dừng sự kiện submit form\r\n        console.log(this.state.values.taskName);\r\n\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\r\n            method: 'POST',\r\n            data: { taskName: this.state.values.taskName }\r\n        });\r\n\r\n        //Xử lý thành công\r\n        promise.then(result => {\r\n            // alert(result.data);\r\n            this.getTaskList();\r\n\r\n        })\r\n\r\n        //Xử lý thất bại\r\n        promise.catch(errors => {\r\n            alert(errors.response.data)\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.addTask}>\r\n                {/* <button onClick={() => { this.getTaskList() }}>Get task list</button> */}\r\n                <div className=\"card\">\r\n                    <div className=\"card__header\">\r\n                        <img src={require('./bg.png')} />\r\n                    </div>\r\n                    {/* <h2>hello!</h2> */}\r\n                    <div className=\"card__body\">\r\n                        <div className=\"card__content\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"card__title\">\r\n                                    <h2>My Tasks</h2>\r\n                                    <p>September 9,2020</p>\r\n                                </div>\r\n                                <div className=\"card__add\">\r\n                                    <input name=\"taskName\" onChange={this.handleChange} id=\"newTask\" type=\"text\" placeholder=\"Enter an activity...\" />\r\n\r\n                                    <button id=\"addItem\" onClick={this.addTask}>\r\n                                        <i className=\"fa fa-plus\" />\r\n                                    </button>\r\n                                </div>\r\n                                <span className=\"text text-danger\">{this.state.errors.taskName}</span>\r\n                            </div>\r\n\r\n                            <div className=\"card__todo form-group\">\r\n                                {/* Uncompleted tasks */}\r\n                                <ul className=\"todo\" id=\"todo\">\r\n                                    {this.renderTaskToDo()}\r\n                                </ul>\r\n                                {/* Completed tasks */}\r\n                                <ul className=\"todo\" id=\"completed\">\r\n                                    {this.renderTaskToDoDone()}\r\n\r\n                                    {/* <li>\r\n                                    <span>Ăn sáng</span>\r\n                                    <div className=\"buttons\">\r\n                                        <button className=\"remove\">\r\n                                            <i className=\"fa fa-trash-alt\" />\r\n                                        </button>\r\n                                        <button className=\"complete\">\r\n                                            <i className=\"far fa-check-circle\" />\r\n                                            <i className=\"fas fa-check-circle\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </li> */}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import Axios from \"axios\";\r\nimport Profile from \"../../pages/Profile/Profile\";\r\nimport { GET_TASK_API } from \"../constants/ToDoListConst\";\r\n\r\n\r\n//Action có 2 loại\r\n//Action thực thi ngay làm thay đổi reducer (action 1)\r\n//Action phải thực hiện xử lý rồi mới gọi action 1 thực thi (async action)\r\n\r\nexport const getTaskListApi = () => {\r\n\r\n    //Tiền xử lý dữ liệu => xử lý function \r\n    return async dispatch => {\r\n\r\n        try {\r\n            let { data, status, ...res } = await Axios({\r\n                url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\r\n                method: 'GET'\r\n            });\r\n            if (status === 200) {\r\n                dispatch({\r\n                    type: GET_TASK_API,\r\n                    taskList: data\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.log(err.response.data)\r\n        }\r\n\r\n        // console.log('promise',res.data)\r\n        // promise.then((result) => {\r\n        //     console.log(result.data);\r\n        //     //Nếu gọi api lấy về kết quả thành công \r\n        //     //=> set lại state của component\r\n        //     dispatch({\r\n        //         type: GET_TASK_API,\r\n        //         taskList: result.data\r\n        //     })\r\n\r\n        //     console.log('thành công')\r\n        // });\r\n\r\n\r\n        // promise.catch((err) => {\r\n        //     console.log('thất bại')\r\n        //     console.log(err.response.data)\r\n        // });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addTaskApi = (taskName) => {\r\n    return async dispatch => {\r\n\r\n        try {\r\n            //Xử lý trước khi dispatch\r\n            let {status,data} = await Axios({\r\n                url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\r\n                method: 'POST',\r\n                data: { taskName: taskName }\r\n            });\r\n            // console.log('res',res)\r\n            if (status === 200) {\r\n                dispatch(getTaskListApi())\r\n            }\r\n        }catch(err){\r\n            console.log(err.response.data);\r\n        }\r\n        // //Xử lý thành công\r\n        // promise.then(result => {\r\n        //     // alert(result.data);\r\n        //     dispatch(getTaskListApi());\r\n\r\n        // })\r\n\r\n        // //Xử lý thất bại\r\n        // promise.catch(errors => {\r\n        //     alert(errors.response.data)\r\n\r\n        // })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const deleteTaskApi = (taskName) => {\r\n    return dispatch => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        promise.then(result => {\r\n            //Sau khi thực hiện api gọi phương thức dispatchAction get TaskListApi để load lại task\r\n            dispatch(getTaskListApi())\r\n        });\r\n\r\n        promise.catch(errors => {\r\n            alert(errors.response.data)\r\n        })\r\n    }\r\n}\r\n\r\nexport const checkTaskApi = (taskName) => {\r\n    return dispatch => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\r\n            method: 'PUT'\r\n        });\r\n\r\n        promise.then(res => {\r\n            dispatch(getTaskListApi())\r\n        });\r\n\r\n        promise.catch(err => {\r\n            alert(err.response.data);\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const rejectTaskApi = (taskName) => {\r\n    return dispatch => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\r\n            method: 'PUT'\r\n        });\r\n\r\n        promise.then(res => {\r\n            alert(res.data);\r\n            dispatch(getTaskListApi());\r\n        });\r\n\r\n        promise.catch(err => {\r\n            alert(err.response.data);\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { addTaskApi, deleteTaskApi, getTaskListApi,checkTaskApi, rejectTaskApi } from '../../redux/actions/ToDoListAction';\r\nimport { GET_TASK_API } from '../../redux/constants/ToDoListConst';\r\n\r\n\r\nexport default function ToDoListRedux(props) {\r\n    \r\n    //Lấy tasklist từ redux về\r\n    const {taskList} = useSelector(state => state.ToDoListReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    let [state, setState] = useState({\r\n     \r\n        values: {\r\n            taskName: ''\r\n        },\r\n        errors: {\r\n            taskName: ''\r\n        }\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let { value, name } = e.target;\r\n        let newValues = { ...state.values };\r\n\r\n        newValues = { ...newValues, [name]: value };\r\n\r\n        let newErrors = { ...state.errors };\r\n\r\n        let regexString = /^[a-z A-Z]+$/;\r\n\r\n        if (!regexString.test(value) || value.trim() === '') {\r\n            newErrors[name] = name + ' invalid !';\r\n        } else {\r\n            newErrors[name] = '';\r\n        }\r\n\r\n\r\n        setState({\r\n            ...state,\r\n            values: newValues,\r\n            errors: newErrors\r\n        })\r\n    }\r\n\r\n\r\n    const getTaskList = () => {\r\n       dispatch(getTaskListApi())\r\n    }\r\n\r\n    const addTask = (e) => {\r\n        e.preventDefault(); //Dừng sự kiện submit form\r\n        console.log(state.values.taskName);\r\n\r\n        //Xử lý nhận dữ liệu từ người dùng nhập => gọi action addTaskApi()\r\n        dispatch(addTaskApi(state.values.taskName))\r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n        getTaskList();\r\n\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    //Xử lý reject task\r\n    const rejectTask = (taskName)=>{\r\n        dispatch(rejectTaskApi(taskName));\r\n\r\n    }\r\n\r\n    //Xử lý done task\r\n   const checkTask = (taskName) => {\r\n        dispatch(checkTaskApi(taskName))\r\n    }\r\n\r\n\r\n    //Hàm xử lý xóa task\r\n    const delTask = (taskName) => {\r\n        dispatch(deleteTaskApi(taskName))\r\n    }\r\n\r\n\r\n    const renderTaskToDo = () => {\r\n        return taskList.filter(item => !item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={() => {\r\n                        checkTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-check-circle\" />\r\n                        <i className=\"fas fa-check-circle\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n    const renderTaskToDoDone = () => {\r\n        return taskList.filter(item => item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={() => {\r\n                        rejectTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-undo\" />\r\n                        <i className=\"fas fa-undo\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__header\">\r\n                <img src={require('./bg.png')} />\r\n            </div>\r\n            {/* <h2>hello!</h2> */}\r\n            <form className=\"card__body\" onSubmit={addTask}>\r\n                <div className=\"card__content\">\r\n                    <div className=\"card__title\">\r\n                        <h2>My Tasks</h2>\r\n                        <p>September 9,2020</p>\r\n                    </div>\r\n                    <div className=\"card__add\">\r\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\r\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\r\n                            <i className=\"fa fa-plus\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"card__todo\">\r\n                        {/* Uncompleted tasks */}\r\n                        <ul className=\"todo\" id=\"todo\">\r\n                            {renderTaskToDo()}\r\n                        </ul>\r\n                        {/* Completed tasks */}\r\n                        <ul className=\"todo\" id=\"completed\">\r\n                            {renderTaskToDoDone()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\n","import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nexport default function TodolistRFC(props) {\r\n\r\n    let [state, setState] = useState({\r\n        taskList: [],\r\n        values: {\r\n            taskName: ''\r\n        },\r\n        errors: {\r\n            taskName: ''\r\n        }\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let { value, name } = e.target;\r\n        let newValues = { ...state.values };\r\n\r\n        newValues = { ...newValues, [name]: value };\r\n\r\n        let newErrors = { ...state.errors };\r\n\r\n        let regexString = /^[a-z A-Z]+$/;\r\n\r\n        if (!regexString.test(value) || value.trim() === '') {\r\n            newErrors[name] = name + ' invalid !';\r\n        } else {\r\n            newErrors[name] = '';\r\n        }\r\n\r\n\r\n        setState({\r\n            ...state,\r\n            values: newValues,\r\n            errors: newErrors\r\n        })\r\n    }\r\n\r\n\r\n    const getTaskList = () => {\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\r\n            method: 'GET'\r\n        });\r\n\r\n        promise.then((result) => {\r\n            console.log(result.data);\r\n            //Nếu gọi api lấy về kết quả thành công \r\n            //=> set lại state của component\r\n            setState({\r\n                ...state,\r\n                taskList: result.data\r\n            })\r\n\r\n            console.log('thành công')\r\n        });\r\n\r\n\r\n        promise.catch((err) => {\r\n            console.log('thất bại')\r\n\r\n            console.log(err.response.data)\r\n        });\r\n    }\r\n\r\n    const addTask = (e) => {\r\n        e.preventDefault(); //Dừng sự kiện submit form\r\n        console.log(state.values.taskName);\r\n\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\r\n            method: 'POST',\r\n            data: { taskName: state.values.taskName }\r\n        });\r\n\r\n        //Xử lý thành công\r\n        promise.then(result => {\r\n            // alert(result.data);\r\n            getTaskList();\r\n\r\n        })\r\n\r\n        //Xử lý thất bại\r\n        promise.catch(errors => {\r\n            alert(errors.response.data)\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTaskList();\r\n\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    //Xử lý reject task\r\n    const rejectTask = (taskName)=>{\r\n        let promise = Axios({\r\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\r\n            method:'PUT'\r\n        });\r\n        \r\n        promise.then(res=>{\r\n            alert(res.data);\r\n            getTaskList();\r\n        });\r\n\r\n        promise.catch(err=>{\r\n            alert(err.response.data);\r\n        })\r\n\r\n    }\r\n\r\n    //Xử lý done task\r\n   const  checkTask = (taskName) => {\r\n        let promise = Axios({\r\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\r\n            method:'PUT'\r\n        });\r\n\r\n        promise.then(res=>{\r\n            alert(res.data);\r\n            getTaskList();\r\n        });\r\n\r\n        promise.catch(err=>{\r\n            alert(err.response.data);\r\n        })\r\n    }\r\n\r\n\r\n    //Hàm xử lý xóa task\r\n    const delTask = (taskName) => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        promise.then(result => {\r\n            alert(result.data);\r\n            getTaskList();\r\n        });\r\n\r\n        promise.catch(errors => {\r\n            alert(errors.response.data)\r\n        })\r\n    }\r\n\r\n\r\n    const renderTaskToDo = () => {\r\n        return state.taskList.filter(item => !item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={() => {\r\n                        checkTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-check-circle\" />\r\n                        <i className=\"fas fa-check-circle\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n    const renderTaskToDoDone = () => {\r\n        return state.taskList.filter(item => item.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"remove\" type=\"button\" onClick={() => {\r\n                        delTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button type=\"button\" className=\"complete\" onClick={() => {\r\n                        rejectTask(item.taskName)\r\n                    }}>\r\n                        <i className=\"far fa-undo\" />\r\n                        <i className=\"fas fa-undo\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__header\">\r\n                <img src={require('./bg.png')} />\r\n            </div>\r\n            {/* <h2>hello!</h2> */}\r\n            <form className=\"card__body\" onSubmit={addTask}>\r\n                <div className=\"card__content\">\r\n                    <div className=\"card__title\">\r\n                        <h2>My Tasks</h2>\r\n                        <p>September 9,2020</p>\r\n                    </div>\r\n                    <div className=\"card__add\">\r\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\r\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\r\n                            <i className=\"fa fa-plus\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"card__todo\">\r\n                        {/* Uncompleted tasks */}\r\n                        <ul className=\"todo\" id=\"todo\">\r\n                            {renderTaskToDo()}\r\n                        </ul>\r\n                        {/* Completed tasks */}\r\n                        <ul className=\"todo\" id=\"completed\">\r\n                            {renderTaskToDoDone()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React,{Fragment} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Header from '../../components/Home/Header/Header';\r\n\r\n\r\n\r\n\r\nexport const HomeTemplate = (props) => {\r\n\r\n    const {Component,...restParam} = props;\r\n    return <Route {...restParam} render={(propsRoute)=>{\r\n        return <>\r\n            <Header />\r\n            <Component {...propsRoute} />\r\n        </>\r\n    }} />\r\n\r\n}","import React,{useState,useEffect} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Button,Layout } from 'antd';\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const UserLoginTemplate = (props) => {\r\n\r\n    const [{width,height},setSize] = useState({width:Math.round(window.innerWidth),height:Math.round(window.innerHeight)});\r\n\r\n    useEffect(()=>{\r\n        window.onresize = () => {\r\n            setSize({\r\n                width: Math.round(window.innerWidth),\r\n                height:Math.round(window.innerHeight)\r\n            })\r\n        }\r\n    },[])\r\n\r\n\r\n    let {Component,...restRoute} =  props;\r\n\r\n    return <Route {...restRoute} render={(propsRoute)=>{\r\n        return <>\r\n            <Layout>\r\n                <Sider width={width/2} style={{height:height,backgroundImage:`url(https://picsum.photos/${Math.round(width/2)}/${height})`,backgroundSize:'100%'}}>\r\n                  \r\n                </Sider>\r\n                <Content>\r\n                    <Component {...propsRoute} />\r\n                </Content>\r\n            </Layout>\r\n      \r\n        </>\r\n    }} />\r\n\r\n}","import React from 'react'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { useDispatch } from 'react-redux'\r\nimport { GET_ALL_COMMENT_SAGA } from '../../../redux/constants/Cyberbugs/CommentConstants';\r\nimport { GET_TASK_DETAIL_SAGA, UPDATE_STATUS_TASK_SAGA } from '../../../redux/constants/Cyberbugs/TaskConstants';\r\nexport default function ContentMain(props) {\r\n\r\n    const { projectDetail } = props;\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDragEnd = (result) => {\r\n        let { projectId, taskId } = JSON.parse(result.draggableId); //Lấy ra chuỗi sau mỗi lần draggable\r\n\r\n        console.log({ projectId, taskId })\r\n        let { source, destination } = result;\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        if (source.index === destination.index && source.droppableId === destination.droppableId) {\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        //gọi api cập nhật lại status\r\n        dispatch({\r\n            type: UPDATE_STATUS_TASK_SAGA,\r\n            taskUpdateStatus: {\r\n                \"taskId\": taskId,\r\n                \"statusId\": destination.droppableId,\r\n                \"projectId\": projectId\r\n            }\r\n        })\r\n    }\r\n\r\n    const renderCardTaskList = () => {\r\n        return <DragDropContext onDragEnd={handleDragEnd}>\r\n            {\r\n                projectDetail.lstTask?.map((taskListDetail, index) => {\r\n                    return <Droppable key={index} droppableId={taskListDetail.statusId}>\r\n                        {(provided) => {\r\n                            return <div className=\"card pb-2\" style={{ width: '17rem', height: 'auto' }} >\r\n                                <div className=\"card-header\">\r\n                                    {taskListDetail.statusName}\r\n                                </div>\r\n                                <div\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                    key={index}\r\n                                    className=\"list-group list-group-flush\" style={{ height: '100%' }}>\r\n                                    {taskListDetail.lstTaskDeTail.map((task, index) => {\r\n                                        return <Draggable key={task.taskId.toString()} index={index} draggableId={JSON.stringify({ projectId: task.projectId, taskId: task.taskId })}>\r\n                                            {(provided) => {\r\n                                                return <div\r\n                                                    ref={provided.innerRef}\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                    key={index} className=\"list-group-item\" data-toggle=\"modal\" data-target=\"#infoModal\" onClick={() => {\r\n                                                        dispatch({ type: GET_TASK_DETAIL_SAGA, taskId: task.taskId });\r\n                                                        dispatch({ type: GET_ALL_COMMENT_SAGA, taskId: task.taskId });\r\n                                                    }}>\r\n                                                    <p className=\"font-weight-300\">\r\n                                                        {task.taskName}\r\n                                                    </p>\r\n                                                    <div className=\"block\" style={{ display: 'flex' }}>\r\n                                                        <div className=\"block-left\">\r\n                                                            <p className=\"text-danger\">{task.priorityTask.priority}</p>\r\n                                                            {/* <i className=\"fa fa-bookmark\" />\r\n                                        <i className=\"fa fa-arrow-up\" /> */}\r\n                                                        </div>\r\n                                                        <div className=\"block-right\">\r\n                                                            <div className=\"avatar-group\" style={{ display: 'flex' }}>\r\n                                                                {task.assigness.map((mem, index) => {\r\n                                                                    return <div className=\"avatar\" key={index}>\r\n                                                                        <img src={mem.avatar} alt={mem.avatar} />\r\n                                                                    </div>\r\n                                                                })}\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            }}\r\n                                        </Draggable>\r\n                                    })}\r\n\r\n                                    {provided.placeholder}\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                        }}\r\n\r\n                    </Droppable>\r\n                })}\r\n\r\n        </DragDropContext>\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\" style={{ display: 'flex' }}>\r\n\r\n            {renderCardTaskList()}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n{/* <div className=\"card\" style={{ width: '17rem', height: '25rem' }}>\r\n<div className=\"card-header\">\r\n    SELECTED FOR DEVELOPMENT 2\r\n</div>\r\n<ul className=\"list-group list-group-flush\">\r\n    <li className=\"list-group-item\">Cras justo odio</li>\r\n    <li className=\"list-group-item\">Dapibus ac facilisis in</li>\r\n</ul>\r\n</div>\r\n<div className=\"card\" style={{ width: '17rem', height: '25rem' }}>\r\n<div className=\"card-header\">\r\n    IN PROGRESS 2\r\n</div>\r\n<ul className=\"list-group list-group-flush\">\r\n    <li className=\"list-group-item\">Cras justo odio</li>\r\n    <li className=\"list-group-item\">Dapibus ac facilisis in</li>\r\n</ul>\r\n</div>\r\n<div className=\"card\" style={{ width: '17rem', height: '25rem' }}>\r\n<div className=\"card-header\">\r\n    DONE 3\r\n</div>\r\n<ul className=\"list-group list-group-flush\">\r\n    <li className=\"list-group-item\">Cras justo odio</li>\r\n    <li className=\"list-group-item\">Dapibus ac facilisis in</li>\r\n    <li className=\"list-group-item\">Vestibulum at eros</li>\r\n</ul>\r\n</div> */}","export const GET_TASK_DETAIL_SAGA = 'GET_TASK_DETAIL_SAGA';\r\nexport const GET_TASK_DETAIL = 'GET_TASK_DETAIL';\r\n\r\n\r\nexport const CHANGE_TASK_MODAL = 'CHANGE_TASK_MODAL';\r\nexport const CHANGE_ASSIGNESS = 'CHANGE_ASSIGNESS';\r\nexport const REMOVE_USER_ASSIGN = 'REMOVE_USER_ASSIGN'\r\n\r\nexport const UPDATE_STATUS_TASK_SAGA = 'UPDATE_STATUS_TASK_SAGA';\r\n\r\n\r\nexport const UPDATE_TASK_SAGA = 'UPDATE_TASK_SAGA';\r\nexport const HANDLE_CHANGE_POST_API_SAGA = 'HANDLE_CHANGE_POST_API_SAGA';","export const GET_ALL_COMMENT_SAGA = 'GET_ALL_COMMENT_SAGA';\r\nexport const GET_ALL_COMMENT = 'GET_ALL_COMMENT';\r\n\r\nexport const DELETE_COMMENT_SAGA = 'DELETE_COMMENT_SAGA';\r\n\r\nexport const INSERT_COMMENT_SAGA = 'INSERT_COMMENT_SAGA';\r\n\r\nexport const UPDATE_COMMENT_SAGA = 'UPDATE_COMMENT_SAGA';","import React from 'react'\r\n\r\nexport default function HeaderMain(props) {\r\n\r\n    const {projectDetail} = props;\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\" style={{ backgroundColor: 'white' }}>\r\n                    <li className=\"breadcrumb-item\">Project</li>\r\n                    <li className=\"breadcrumb-item\">CyberLearn</li>\r\n                    <li className=\"breadcrumb-item\">Project management</li>\r\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                        {projectDetail.projectName}\r\n                    </li>\r\n                </ol>\r\n            </nav>\r\n            \r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\n\r\nexport default function InfoMain(props) {\r\n\r\n    const {projectDetail} = props;\r\n\r\n    const renderAvatar = () => {\r\n        \r\n        \r\n        return projectDetail.members?.map((user,index) => {\r\n            return   <div key={index} className=\"avatar\">\r\n            <img src={user.avatar} alt={user.avatar} />\r\n        </div>\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{projectDetail.projectName}</h3>\r\n\r\n            <section>\r\n                {ReactHtmlParser(projectDetail.description)}\r\n            </section>\r\n            <div className=\"info\" style={{ display: 'flex' }}>\r\n                <div className=\"search-block\">\r\n                    <input className=\"search\" />\r\n                    <i className=\"fa fa-search\" />\r\n                </div>\r\n                <div className=\"avatar-group\" style={{ display: 'flex' }}>\r\n                    {renderAvatar()}\r\n                </div>\r\n                <div style={{ marginLeft: 20 }} className=\"text\">Only My Issues</div>\r\n                <div style={{ marginLeft: 20 }} className=\"text\">Recently Updated</div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default function MenuCyberbugs() {\r\n    return (\r\n        <div className=\"menu\">\r\n            <div className=\"account\">\r\n                <div className=\"avatar\">\r\n                    <img src={require(\"../../assets/img/download.jfif\")} alt=\"123\" />\r\n                </div>\r\n                <div className=\"account-info\">\r\n                    <p>CyberLearn.vn</p>\r\n                    <p>Report bugs</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"control\">\r\n               \r\n                <div>\r\n                    <i className=\"fa fa-bars mr-1\" /> \r\n                    <NavLink className=\"text-dark\"  activeStyle={{color:'blue'}} to='/projectmanagement' activeClassName=\"active font-weight-bold  text-primary\" >Project management</NavLink>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-plus-square mr-1\" /> \r\n                    <NavLink className=\"text-dark\"  activeStyle={{color:'blue'}} to='/createproject' activeClassName=\"active font-weight-bold  text-primary\" >Create project</NavLink>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-user-cog mr-1\" /> \r\n                    <NavLink className=\"text-dark\"  activeStyle={{color:'blue'}} to='/usermanagement' activeClassName=\"active font-weight-bold  text-primary\" >Users management</NavLink>\r\n                </div>\r\n                <div>\r\n                <i className=\"fa fa-user-plus mr-1\" /> \r\n                <NavLink className=\"text-dark\"  activeStyle={{color:'blue'}} to='/signup' activeClassName=\"active font-weight-bold  text-primary\" >Register</NavLink>\r\n            </div>\r\n            </div>\r\n            <div className=\"feature\">\r\n                <div>\r\n                    <i className=\"fa fa-truck mr-1\" />\r\n                    <span>Releases</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-equals mr-1\" />\r\n                    <span>Issues and filters</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-paste mr-1\" />\r\n                    <span>Pages</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-location-arrow mr-1\" />\r\n                    <span>Reports</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-box\" />\r\n                    <span>Components</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","export const GET_ALL_STATUS_SAGA = 'GET_ALL_STATUS_SAGA';\r\nexport const GET_ALL_STATUS = 'GET_ALL_STATUS';","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { GET_ALL_STATUS_SAGA } from '../../../redux/constants/Cyberbugs/StatusConstant';\r\nimport { GET_ALL_PRIORITY_SAGA } from '../../../redux/constants/Cyberbugs/PriorityConstants';\r\nimport { CHANGE_ASSIGNESS, CHANGE_TASK_MODAL, HANDLE_CHANGE_POST_API_SAGA, REMOVE_USER_ASSIGN } from '../../../redux/constants/Cyberbugs/TaskConstants';\r\nimport { GET_ALL_TASK_TYPE_SAGA } from '../../../redux/constants/Cyberbugs/TaskTypeConstants';\r\nimport { Editor } from '@tinymce/tinymce-react'\r\nimport { Empty, Select } from 'antd';\r\nimport { DELETE_COMMENT_SAGA, INSERT_COMMENT_SAGA, UPDATE_COMMENT_SAGA } from '../../../redux/constants/Cyberbugs/CommentConstants';\r\nimport { Popconfirm } from 'antd';\r\nimport { get } from 'lodash';\r\n\r\n\r\nconst { Option } = Select;\r\nexport default function ModalCyberBugs(props) {\r\n\r\n    const { taskDetailModal } = useSelector(state => state.TaskReducer);\r\n    const { arrStatus } = useSelector(state => state.StatusReducer);\r\n    const { arrPriority } = useSelector(state => state.PriorityReducer);\r\n    const { arrTaskType } = useSelector(state => state.TaskTypeReducer);\r\n\r\n    const { projectDetail } = useSelector(state => state.ProjectReducer)\r\n    const [visibleEditor, setVisibleEditor] = useState(false);\r\n    const [historyContent, setHistoryContent] = useState(taskDetailModal.description);\r\n    const [content, setContent] = useState(taskDetailModal.description);\r\n\r\n    const commentList = useSelector(state => state.CommentReducer.commentList);\r\n\r\n    const [editCommentId, setEditCommentId] = useState(0);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: GET_ALL_STATUS_SAGA });\r\n        dispatch({ type: GET_ALL_PRIORITY_SAGA });\r\n        dispatch({ type: GET_ALL_TASK_TYPE_SAGA });\r\n    }, [])\r\n\r\n\r\n    console.log('taskDetailModal', taskDetailModal)\r\n\r\n    const renderDescription = () => {\r\n        const jsxDescription = ReactHtmlParser(taskDetailModal.description);\r\n        return <div>\r\n            {visibleEditor ? <div> <Editor\r\n                name=\"description\"\r\n                initialValue={taskDetailModal.description}\r\n                init={{\r\n                    selector: 'textarea#myTextArea',\r\n                    height: 500,\r\n                    menubar: false,\r\n                    plugins: [\r\n                        'advlist autolink lists link image charmap print preview anchor',\r\n                        'searchreplace visualblocks code fullscreen',\r\n                        'insertdatetime media table paste code help wordcount'\r\n                    ],\r\n                    toolbar:\r\n                        'undo redo | formatselect | bold italic backcolor | \\\r\n                            alignleft aligncenter alignright alignjustify | \\\r\n                            bullist numlist outdent indent | removeformat | help'\r\n                }}\r\n                onEditorChange={(content, editor) => {\r\n                    setContent(content);\r\n                }}\r\n            />\r\n\r\n                <button className=\"btn btn-primary m-2\" onClick={() => {\r\n                    dispatch({\r\n                        type: HANDLE_CHANGE_POST_API_SAGA,\r\n                        actionType: CHANGE_TASK_MODAL,\r\n                        name: 'description',\r\n                        value: content\r\n                    })\r\n                    setVisibleEditor(false);\r\n                }}>Save</button>\r\n                <button className=\"btn btn-primary m-2\" onClick={() => {\r\n                    dispatch({\r\n                        type: HANDLE_CHANGE_POST_API_SAGA,\r\n                        actionType: CHANGE_TASK_MODAL,\r\n                        name: 'description',\r\n                        value: historyContent\r\n                    })\r\n\r\n                    //    dispatch({\r\n                    //         type: CHANGE_TASK_MODAL,\r\n                    //         name: 'description',\r\n                    //         value: historyContent\r\n                    //     })\r\n                    setVisibleEditor(false)\r\n                }}>Close</button>\r\n            </div> : <div onClick={() => {\r\n\r\n                setHistoryContent(taskDetailModal.description);\r\n                setVisibleEditor(!visibleEditor);\r\n\r\n            }}>{jsxDescription}</div>}\r\n\r\n\r\n        </div>\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n\r\n        dispatch({\r\n            type: HANDLE_CHANGE_POST_API_SAGA,\r\n            actionType: CHANGE_TASK_MODAL,\r\n            name,\r\n            value\r\n        })\r\n\r\n        // dispatch({\r\n        //     type: CHANGE_TASK_MODAL,\r\n        //     name,\r\n        //     value\r\n        // });\r\n\r\n\r\n    }\r\n    const renderTimeTracking = () => {\r\n\r\n        const { timeTrackingSpent, timeTrackingRemaining } = taskDetailModal;\r\n\r\n        const max = Number(timeTrackingSpent) + Number(timeTrackingRemaining);\r\n        const percent = Math.round(Number(timeTrackingSpent) / max * 100)\r\n\r\n        return <div>\r\n            <div style={{ display: 'flex' }}>\r\n                <i className=\"fa fa-clock\" />\r\n                <div style={{ width: '100%' }}>\r\n\r\n                    <div className=\"progress\">\r\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{ width: `${percent}%` }} aria-valuenow={Number(timeTrackingSpent)} aria-valuemin={Number(timeTrackingRemaining)} aria-valuemax={max} />\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <p className=\"logged\">{Number(timeTrackingRemaining)}h logged</p>\r\n                        <p className=\"estimate-time\">{Number(timeTrackingRemaining)}h remaining</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-6\">\r\n                    <input className=\"form-control\" name=\"timeTrackingSpent\" onChange={handleChange} />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <input className=\"form-control\" name=\"timeTrackingRemaining\" onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    const renderComments = () => {\r\n        return commentList.length > 0 ? commentList.slice(0).reverse().map((commentDetail, index) => {\r\n            return editCommentId === commentDetail.id ?\r\n                <div className=\"lastest-comment mb-3\" key={index}>\r\n                    <div className=\"comment-item\">\r\n                        <div className=\"display-comment\" style={{ display: 'flex' }}>\r\n                            <div className=\"avatar\">\r\n                                <img src={(commentDetail.user.avatar)} alt='xyz' />\r\n                            </div>\r\n                            <div className=\"edit-comment\">\r\n                                <p style={{ marginBottom: 5 }}>\r\n                                    {commentDetail.user.name}\r\n                                </p>\r\n                                <input className='form-control' style={{ marginBottom: 5 }} name='newCommentContent' defaultValue={commentDetail.contentComment} />\r\n                                <div>\r\n                                    <span onClick={(e) => {\r\n                                        const newCommentContent = e.target.closest(\".edit-comment\").querySelector('input[name=\"newCommentContent\"]').value;\r\n                                        if (newCommentContent) {\r\n                                            dispatch({\r\n                                                type: UPDATE_COMMENT_SAGA,\r\n                                                taskId: commentDetail.taskId,\r\n                                                commentId: editCommentId,\r\n                                                newCommentContent: encodeURIComponent(newCommentContent)\r\n                                            });\r\n                                            console.log(\"chuyển code ASCII là \", encodeURIComponent(newCommentContent))\r\n                                            setTimeout(() => {\r\n                                                setEditCommentId(0);\r\n                                            }, 1000);\r\n                                        }\r\n                                    }}\r\n                                        style={{ color: '#929398' }}>Save Edit</span>\r\n                                    •\r\n                                    <span onClick={() => { setEditCommentId(0) }} style={{ color: '#929398' }}>Cancel</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className=\"lastest-comment mb-3\" key={index}>\r\n                    <div className=\"comment-item\">\r\n                        <div className=\"display-comment\" style={{ display: 'flex' }}>\r\n                            <div className=\"avatar\">\r\n                                <img src={(commentDetail.user.avatar)} alt='xyz' />\r\n                            </div>\r\n                            <div>\r\n                                <p style={{ marginBottom: 5 }}>\r\n                                    {commentDetail.user.name}\r\n                                </p>\r\n                                <p style={{ marginBottom: 5 }}>\r\n                                    {commentDetail.contentComment}\r\n                                </p>\r\n                                <div>\r\n                                    <span onClick={() => {\r\n                                        setEditCommentId(commentDetail.id)\r\n                                    }}\r\n                                        style={{ color: '#929398' }}>Edit</span>\r\n                                    •\r\n                                    <Popconfirm\r\n                                        title=\"Are you sure to delete this task?\"\r\n                                        onConfirm={() => {\r\n                                            dispatch({ type: DELETE_COMMENT_SAGA, commentId: commentDetail.id, taskId: commentDetail.taskId })\r\n                                        }}\r\n                                        okText=\"Yes\"\r\n                                        cancelText=\"No\"\r\n                                    >\r\n                                        <span style={{ color: '#929398' }}>Delete</span>\r\n                                    </Popconfirm>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        })\r\n        : \"\"\r\n    }\r\n\r\n    const renderCommentBlock = () => {\r\n        return <div className=\"block-comment mb-3\" style={{ display: 'flex' }}>\r\n            <div className=\"avatar\">\r\n                <img src={taskDetailModal.assigness[0]?.avatar} alt='xyz' />\r\n            </div>\r\n            <div className=\"input-comment\">\r\n                <input className='form-control' name='contentComment' type=\"text\" onChange={(e) => { handelChangeComment(e) }} placeholder=\"Add a comment ...\" />\r\n\r\n                <div className='mt-1'>\r\n                    <button onClick={(e) => {\r\n                        const contentComment = e.target.closest('.input-comment').querySelector('input[name=\"contentComment\"]');\r\n                        if (contentComment.value) {\r\n                            const newComnent = {\r\n                                taskId: taskDetailModal.taskId,\r\n                                contentComment: contentComment.value\r\n                            }\r\n                            dispatch({\r\n                                type: INSERT_COMMENT_SAGA,\r\n                                newComnent\r\n                            })\r\n                            setTimeout(function () {\r\n                                contentComment.value = \"\";\r\n                            }, 1000);\r\n                        }\r\n                    }} className='btn btn-primary btn-sm mr-1'>Save</button>\r\n                    <button onClick={(e) => { e.target.closest('.input-comment').querySelector('input[name=\"contentComment\"]').value = \"\" }} className='btn btn-light btn-sm'>Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    const handelChangeComment = (e) => {\r\n        const { name, value } = e.target;\r\n        // console.log(name + \" \" + value);\r\n        //for user input special char to quick comment\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"infoModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"infoModal\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-info\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <div className=\"task-title\">\r\n                            <i className=\"fa fa-bookmark\" />\r\n                            <select name=\"typeId\" value={taskDetailModal.typeId} onChange={handleChange}>\r\n                                {arrTaskType.map((tp, index) => {\r\n                                    return <option key={index} value={tp.id}>{tp.taskType}</option>\r\n                                })}\r\n                            </select>\r\n\r\n                            <span>{taskDetailModal.taskName}</span>\r\n                        </div>\r\n                        <div style={{ display: 'flex' }} className=\"task-click\">\r\n                            <div>\r\n                                <i className=\"fab fa-telegram-plane\" />\r\n                                <span style={{ paddingRight: 20 }}>Give feedback</span>\r\n                            </div>\r\n                            <div>\r\n                                <i className=\"fa fa-link\" />\r\n                                <span style={{ paddingRight: 20 }}>Copy link</span>\r\n                            </div>\r\n                            <i className=\"fa fa-trash-alt='xyz'\" style={{ cursor: 'pointer' }} />\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">×</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                    <p className=\"issue\">This is an issue of type: Task.</p>\r\n                                    <div className=\"description\">\r\n                                        <p>Description</p>\r\n                                        {renderDescription()}\r\n                                    </div>\r\n                                    <div className=\"comment\">\r\n                                        <h6>Comment</h6>\r\n                                        {renderCommentBlock()}\r\n                                        {renderComments()}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"status\">\r\n                                        <h6>STATUS</h6>\r\n                                        <select name=\"statusId\" className=\"custom-select\" value={taskDetailModal.statusId} onChange={(e) => {\r\n\r\n                                            handleChange(e)\r\n\r\n                                            // const action = {\r\n                                            //     type:UPDATE_STATUS_TASK_SAGA,\r\n                                            //     taskUpdateStatus: {\r\n                                            //         taskId:taskDetailModal.taskId,\r\n                                            //         statusId:e.target.value,\r\n                                            //         projectId:taskDetailModal.projectId\r\n\r\n                                            //     }\r\n                                            // }\r\n\r\n                                            // // // console.log('action',action);\r\n                                            // console.log('taskupdatestatus',{\r\n                                            //     taskId:taskDetailModal.taskId,\r\n                                            //     statusId:e.target.value\r\n                                            // })\r\n\r\n                                            // dispatch(action)\r\n\r\n\r\n                                        }}>\r\n                                            {arrStatus.map((status, index) => {\r\n                                                return <option value={status.statusId} key={index}>{status.statusName}</option>\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"assignees\">\r\n                                        <h6>ASSIGNEES</h6>\r\n                                        <div className=\"row\">\r\n                                            {\r\n                                                taskDetailModal.assigness?.map((user, index) => {\r\n                                                    return <div className=\"col-6  mt-2 mb-2\" key={index}>\r\n                                                        <div key={index} style={{ display: 'flex' }} className=\"item\">\r\n\r\n\r\n                                                            <div className=\"avatar\">\r\n                                                                <img src={user.avatar} alt={user.avatar} />\r\n                                                            </div>\r\n                                                            <p className=\"name mt-1 ml-1\">\r\n                                                                {user.name}\r\n                                                                <i className=\"fa fa-times\" style={{ marginLeft: 5, cursor: 'pointer' }} onClick={() => {\r\n\r\n                                                                    dispatch({\r\n                                                                        type: HANDLE_CHANGE_POST_API_SAGA,\r\n                                                                        actionType: REMOVE_USER_ASSIGN,\r\n                                                                        userId: user.id\r\n                                                                    })\r\n\r\n                                                                    // dispatch({\r\n                                                                    //     type:REMOVE_USER_ASSIGN,\r\n                                                                    //     userId:user.id\r\n                                                                    // })\r\n                                                                }} />\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                })\r\n                                            }\r\n\r\n                                            <div className=\"col-6  mt-2 mb-2\">\r\n\r\n                                                <Select\r\n                                                    options={projectDetail.members?.filter(mem => {\r\n                                                        let index = taskDetailModal.assigness?.findIndex(us => us.id === mem.userId);\r\n                                                        if (index !== -1) {\r\n                                                            return false;\r\n                                                        }\r\n                                                        return true;\r\n                                                    }).map((mem, index) => {\r\n                                                        return { value: mem.userId, label: mem.name };\r\n                                                    })}\r\n                                                    optionFilterProp=\"label\"\r\n                                                    style={{ width: '100%' }}\r\n                                                    name=\"lstUser\"\r\n                                                    value=\"+ Add more\"\r\n                                                    className=\"form-control\"\r\n                                                    onSelect={(value) => {\r\n                                                        if (value == '0') {\r\n                                                            return;\r\n                                                        }\r\n                                                        let userSelected = projectDetail.members.find(mem => mem.userId == value);\r\n                                                        userSelected = { ...userSelected, id: userSelected.userId };\r\n\r\n                                                        dispatch({\r\n                                                            type: HANDLE_CHANGE_POST_API_SAGA,\r\n                                                            actionType: CHANGE_ASSIGNESS,\r\n                                                            userSelected\r\n                                                        })\r\n\r\n                                                        //dispatchReducer\r\n                                                        // dispatch({\r\n                                                        //     type: CHANGE_ASSIGNESS,\r\n                                                        //     userSelected\r\n                                                        // })\r\n                                                    }}>\r\n\r\n\r\n                                                </Select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"reporter\">\r\n                                <h6>REPORTER</h6>\r\n                                <div style={{ display: 'flex' }} className=\"item\">\r\n                                    <div className=\"avatar\">\r\n                                        <img src={require(\"../../../assets/img/download (1).jfif\")} alt='xyz' />\r\n                                    </div>\r\n                                    <p className=\"name\">\r\n                                        Pickle Rick\r\n            <i className=\"fa fa-times\" style={{ marginLeft: 5 }} />\r\n                                    </p>\r\n                                </div>\r\n                            </div> */}\r\n                                    <div className=\"priority\" style={{ marginBottom: 20 }}>\r\n                                        <h6>PRIORITY</h6>\r\n                                        <select name=\"priorityId\" className=\"form-control\" value={taskDetailModal.priorityId} onChange={(e) => {\r\n                                            handleChange(e);\r\n                                        }}>\r\n                                            {arrPriority.map((item, index) => {\r\n                                                return <option key={index} value={item.priorityId}>{item.priority}</option>\r\n                                            })}\r\n\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"estimate\">\r\n                                        <h6>ORIGINAL ESTIMATE (HOURS)</h6>\r\n                                        <input name=\"originalEstimate\" type=\"text\" className=\"estimate-hours\" value={taskDetailModal.originalEstimate} onChange={(e) => {\r\n                                            handleChange(e);\r\n                                        }} />\r\n                                    </div>\r\n                                    <div className=\"time-tracking\">\r\n                                        <h6>TIME TRACKING</h6>\r\n                                        {\r\n                                            renderTimeTracking()\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div style={{ color: '#929398' }}>Create at a month ago</div>\r\n                                    <div style={{ color: '#929398' }}>Update at a few seconds ago</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","export const GET_ALL_PRIORITY = 'GET_ALL_PRIORITY';\r\nexport const GET_ALL_PRIORITY_SAGA = 'GET_ALL_PRIORITY_SAGA';","export const GET_ALL_TASK_TYPE = 'GET_ALL_TASK_TYPE';\r\nexport const GET_ALL_TASK_TYPE_SAGA = 'GET_ALL_TASK_TYPE_SAGA';","import { Editor } from '@tinymce/tinymce-react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Select, Radio, Slider } from 'antd';\r\nimport { useSelector, useDispatch, connect } from 'react-redux'\r\nimport { GET_ALL_PROJECT_SAGA } from '../../../redux/constants/Cyberbugs/ProjectCyberBugsConstants';\r\nimport { GET_ALL_TASK_TYPE_SAGA } from '../../../redux/constants/Cyberbugs/TaskTypeConstants';\r\nimport { GET_ALL_PRIORITY_SAGA } from '../../../redux/constants/Cyberbugs/PriorityConstants';\r\n\r\nimport { withFormik } from 'formik';\r\n\r\nimport * as Yup from 'yup'\r\nimport { GET_ALL_STATUS_SAGA } from '../../../redux/constants/Cyberbugs/StatusConstant';\r\nimport { GET_USER_BY_PROJECT_ID, GET_USER_BY_PROJECT_ID_SAGA } from '../../../redux/constants/Cyberbugs/UsersContants';\r\nconst { Option } = Select;\r\n\r\nconst children = [];\r\n\r\nfor (let i = 10; i < 36; i++) {\r\n    children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n}\r\nfunction FormCreateTask(props) {\r\n\r\n    //Lấy dữ liệu từ redux \r\n    const { arrProject } = useSelector(state => state.ProjectCyberBugsReducer);\r\n    const { arrTaskType } = useSelector(state => state.TaskTypeReducer);\r\n    const { arrPriority } = useSelector(state => state.PriorityReducer);\r\n    const { arrUser } = useSelector(state => state.UserLoginCyberBugsReducer);\r\n    const { arrStatus } = useSelector(state => state.StatusReducer);\r\n\r\n    console.log('arrStatus', arrStatus);\r\n    //Hàm biến đổi options cho thẻ select\r\n    const userOptions = arrUser.map((item, index) => {\r\n        return { value: item.userId, label: item.name }\r\n    })\r\n    //Do kết nối với withformik => component có các props\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        setValues,\r\n        setFieldValue\r\n    } = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n    const [size, setSize] = React.useState('default');\r\n\r\n    const [timeTracking, setTimetracking] = useState({\r\n        timeTrackingSpent: 0,\r\n        timeTrackingRemaining: 0\r\n    })\r\n\r\n\r\n\r\n    //hook\r\n    useEffect(() => {\r\n        dispatch({ type: GET_ALL_PROJECT_SAGA });\r\n        dispatch({ type: GET_ALL_TASK_TYPE_SAGA });\r\n        dispatch({ type: GET_ALL_PRIORITY_SAGA });\r\n        dispatch({ type: GET_ALL_STATUS_SAGA });\r\n        //Đưa hàm handle submit lên drawer reducer để cập nhật lại sự kiện cho nút submitt\r\n        dispatch({ type: 'SET_SUBMIT_CREATE_TASK', submitFunction: handleSubmit })\r\n\r\n        dispatch({ type: 'GET_USER_API', keyWord: '' });\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const children = [];\r\n    return (\r\n        <form className=\"container\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <p>Project</p>\r\n                <select name=\"projectId\" className=\"form-control\" onChange={(e) => {\r\n\r\n                    //dispatch giá trị làm thay đổi arrUser\r\n                    let { value } = e.target;\r\n                    dispatch({\r\n                        type: GET_USER_BY_PROJECT_ID_SAGA,\r\n                        idProject: value\r\n                    })\r\n                    //Cập nhật giá trị cho project Id\r\n                    setFieldValue('projectId', e.target.value);\r\n\r\n\r\n                }}>\r\n                    {arrProject.map((project, index) => {\r\n                        return <option key={index} value={project.id}>{project.projectName}</option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Task name</p>\r\n                <input name=\"taskName\" className=\"form-control\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Status</p>\r\n                <select name=\"statusId\" className=\"form-control\" onChange={handleChange}>\r\n                    {arrStatus.map((statusItem, index) => {\r\n                        return <option key={index} value={statusItem.statusId}>{statusItem.statusName}</option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <p>Priority</p>\r\n                        <select name=\"priorityId\" className=\"form-control\" onChange={handleChange}>\r\n                            {arrPriority.map((priority, index) => {\r\n                                return <option key={index} value={priority.priorityId}>\r\n                                    {priority.priority}\r\n                                </option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <p>Task type</p>\r\n                        <select className=\"form-control\" name=\"typeId\" onChange={handleChange}>\r\n                            {arrTaskType.map((taskType, index) => {\r\n                                return <option key={index} value={taskType.id}>{taskType.taskType}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <p>Assignees</p>\r\n                        <Select\r\n\r\n                            mode=\"multiple\"\r\n                            size={size}\r\n                            options={userOptions}\r\n                            placeholder=\"Please select\"\r\n                            optionFilterProp=\"label\"\r\n                            onChange={(values) => {\r\n                                //set lại giá trị cho lstUserAsign\r\n                                setFieldValue('listUserAsign', values);\r\n                            }}\r\n                            onSelect={(value) => {\r\n\r\n                                console.log(value)\r\n\r\n                            }}\r\n                            style={{ width: '100%' }}\r\n                        >\r\n                            {children}\r\n                        </Select>\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-12\">\r\n                                <p>Original Estimate</p>\r\n                                <input type=\"number\" min=\"0\" name=\"originalEstimate\" defaultValue=\"0\" className=\"form-control\" height=\"30\" onChange={handleChange} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <p>Time tracking</p>\r\n\r\n                        <Slider defaultValue={30} value={timeTracking.timeTrackingSpent} max={Number(timeTracking.timeTrackingSpent) + Number(timeTracking.timeTrackingRemaining)} />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-left font-weight-bold\">{timeTracking.timeTrackingSpent}h logged</div>\r\n                            <div className=\"col-6 text-right font-weight-bold\">{timeTracking.timeTrackingRemaining}h remaining</div>\r\n                        </div>\r\n                        <div className=\"row\" style={{ marginTop: 5 }}>\r\n                            <div className=\"col-6\">\r\n                                <p>Time spent</p>\r\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingSpent\" onChange={(e) => {\r\n                                    setTimetracking({\r\n                                        ...timeTracking,\r\n                                        timeTrackingSpent: e.target.value\r\n                                    });\r\n\r\n                                    setFieldValue('timeTrackingSpent', e.target.value);\r\n                                }} />\r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                                <p>Time remaining</p>\r\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingRemaining\" onChange={(e) => {\r\n                                    setTimetracking({\r\n                                        ...timeTracking,\r\n                                        timeTrackingRemaining: e.target.value\r\n                                    });\r\n                                    setFieldValue('timeTrackingRemaining', e.target.value);\r\n\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Description</p>\r\n                <Editor\r\n                    name=\"description\"\r\n                    init={{\r\n                        selector: 'textarea#myTextArea',\r\n                        height: 500,\r\n                        menubar: false,\r\n                        plugins: [\r\n                            'advlist autolink lists link image charmap print preview anchor',\r\n                            'searchreplace visualblocks code fullscreen',\r\n                            'insertdatetime media table paste code help wordcount'\r\n                        ],\r\n                        toolbar:\r\n                            'undo redo | formatselect | bold italic backcolor | \\\r\n                            alignleft aligncenter alignright alignjustify | \\\r\n                            bullist numlist outdent indent | removeformat | help'\r\n                    }}\r\n                    onEditorChange={(content, editor) => {\r\n                        setFieldValue('description', content);\r\n                    }}\r\n                />\r\n            </div>\r\n            {/* <button type=\"submit\">submit</button> */}\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst frmCreateTask = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        const { arrProject, arrTaskType, arrPriority, arrStatus } = props;\r\n\r\n\r\n        // if(arrProject?.length>0){\r\n        //     props.dispatch({type:GET_USER_BY_PROJECT_ID_SAGA,idProject:arrProject[0]?.id});\r\n        // }\r\n\r\n\r\n        return {\r\n            taskName: '',\r\n            description: '',\r\n            statusId: arrStatus[0]?.statusId,\r\n            originalEstimate: 0,\r\n            timeTrackingSpent: 0,\r\n            timeTrackingRemaining: 0,\r\n            projectId: arrProject[0]?.id,\r\n            typeId: arrTaskType[0]?.id,\r\n            priorityId: arrPriority[0]?.priorityId,\r\n            listUserAsign: []\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n        props.dispatch({ type: 'CREATE_TASK_SAGA', taskObject: values })\r\n        console.log('taskobject', values)\r\n    },\r\n    displayName: 'createTaskForm',\r\n})(FormCreateTask);\r\n\r\n// const {arrProject} = useSelector(state=>state.ProjectCyberBugsReducer);\r\n// const {arrTaskType} = useSelector(state=>state.TaskTypeReducer);\r\n// const {arrPriority} = useSelector(state => state.PriorityReducer);\r\n// const {userSearch} = useSelector(state => state.UserLoginCyberBugsReducer);\r\n// const {arrStatus} = useSelector(state => state.StatusReducer);\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        arrProject: state.ProjectCyberBugsReducer.arrProject,\r\n        arrTaskType: state.TaskTypeReducer.arrTaskType,\r\n        arrPriority: state.PriorityReducer.arrPriority,\r\n        arrStatus: state.StatusReducer.arrStatus,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(frmCreateTask);\r\n","export const GET_ALL_PROJECT = 'GET_ALL_PROJECT';\r\nexport const GET_ALL_PROJECT_SAGA = 'GET_ALL_PROJECT_SAGA';\r\n","export const SIGN_UP_USER_SAGA = 'SIGN_UP_USER_SAGA';\r\nexport const GET_USER_BY_PROJECT_ID_SAGA = 'GET_USER_BY_PROJECT_ID_SAGA';\r\nexport const GET_USER_BY_PROJECT_ID = 'GET_USER_BY_PROJECT_ID';\r\nexport const GET_ALL_USER_SAGA = 'GET_ALL_USER_SAGA';\r\nexport const GET_ALL_USER = 'GET_ALL_USER';\r\nexport const EDIT_USER_SAGA = 'EDIT_USER_SAGA';;\r\nexport const DELETE_USER_SAGA = 'DELETE_USER_SAGA'","import React, { useState } from 'react'\r\nimport { Layout, Menu } from 'antd';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    UserOutlined,\r\n    VideoCameraOutlined,\r\n    UploadOutlined,\r\n    BarsOutlined,\r\n    SearchOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport FormCreateTask from '../Forms/FormCreateTask/FormCreateTask';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\nexport default function SidebarCyberbugs() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({\r\n        collapsed: false,\r\n    })\r\n    const toggle = () => {\r\n        setState({\r\n            collapsed: !state.collapsed,\r\n        });\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            <Sider trigger={null} collapsible collapsed={state.collapsed} style={{ height: '100%' }}>\r\n                <div className=\"text-right pr-2\" onClick={toggle} ><BarsOutlined style={{ cursor: 'pointer', color: '#fff', fontSize: 25 }} /></div>\r\n\r\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                    <Menu.Item key=\"1\" icon={<PlusOutlined style={{ fontSize: 20 }} />} onClick={()=>{\r\n                        dispatch({\r\n                            type:'OPEN_FORM_CREATE_TASK',\r\n                            Component:<FormCreateTask />,\r\n                            title:'Create task'\r\n                        })\r\n\r\n                    }}>\r\n                        <span className=\"mb-2\">Create task</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\" icon={<SearchOutlined style={{ fontSize: 20 }} />}>\r\n                        Search\r\n                     </Menu.Item>\r\n\r\n                </Menu>\r\n            </Sider>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport ContentMain from '../../components/Cyberbugs/Main/ContentMain';\r\nimport HeaderMain from '../../components/Cyberbugs/Main/HeaderMain';\r\nimport InfoMain from '../../components/Cyberbugs/Main/InfoMain';\r\nimport MenuCyberbugs from '../../components/Cyberbugs/MenuCyberbugs';\r\nimport ModalCyberBugs from '../../components/Cyberbugs/ModalCyberBugs.js/ModalCyberBugs';\r\nimport SidebarCyberbugs from '../../components/Cyberbugs/SidebarCyberbugs';\r\nimport Header from '../../components/Home/Header/Header';\r\n\r\nimport '../../index.css';\r\n\r\n\r\n\r\nexport const CyberbugsTemplate = (props) => {\r\n\r\n    const { Component, ...restParam } = props;\r\n    return <Route {...restParam} render={(propsRoute) => {\r\n        return <>\r\n            <div className=\"jira\">\r\n                <SidebarCyberbugs />\r\n                <MenuCyberbugs />\r\n                    <Component {...propsRoute} />\r\n                <ModalCyberBugs />\r\n            </div>\r\n        </>\r\n    }} />\r\n\r\n}","import React, { useEffect } from 'react'\r\nimport ContentMain from '../../../components/Cyberbugs/Main/ContentMain'\r\nimport HeaderMain from '../../../components/Cyberbugs/Main/HeaderMain'\r\nimport InfoMain from '../../../components/Cyberbugs/Main/InfoMain'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\n\r\n\r\n\r\nexport default function IndexCyberBugs(props) {\r\n\r\n    const {projectDetail} = useSelector(state => state.ProjectReducer)\r\n    const dispatch = useDispatch();\r\n\r\n    console.log('projectDetail',projectDetail)\r\n\r\n\r\n    useEffect(()=>{\r\n        //Khi người dùng link qua trang này bằng thẻ navlink hoặc người dùng tự gõ url thì ta sẽ lấy tham số từ url => gọi saga\r\n        const {projectId} = props.match.params;\r\n        dispatch({\r\n            type:'GET_PROJECT_DETAIL',\r\n            projectId\r\n        });\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <HeaderMain projectDetail={projectDetail} />\r\n\r\n            <InfoMain projectDetail={projectDetail} />\r\n\r\n            <ContentMain projectDetail={projectDetail} />\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { withFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { connect, useSelector, useDispatch } from 'react-redux'\r\n\r\nfunction CreateProject(props) {\r\n\r\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        setValues,\r\n        setFieldValue\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        //Gọi api để lấy dữ liệu thẻ select\r\n        dispatch({ type: 'GET_ALL_PROJECT_CATEGORY_SAGA' })\r\n    }, []);\r\n    const handleEditorChange = (content, editor) => {\r\n        setFieldValue('description', content)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container m-5\">\r\n            <h3>CreateProject</h3>\r\n            <form className=\"container\" onSubmit={handleSubmit} onChange={handleChange}>\r\n                <div className=\"form-group\">\r\n                    <p>Name</p>\r\n                    <input className=\"form-control\" name=\"projectName\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p>Description</p>\r\n                    <Editor\r\n\r\n                        name=\"description\"\r\n\r\n                        init={{\r\n                            selector: 'textarea#myTextArea',\r\n\r\n                            height: 500,\r\n                            menubar: false,\r\n                            plugins: [\r\n                                'advlist autolink lists link image charmap print preview anchor',\r\n                                'searchreplace visualblocks code fullscreen',\r\n                                'insertdatetime media table paste code help wordcount'\r\n                            ],\r\n                            toolbar:\r\n                                'undo redo | formatselect | bold italic backcolor | \\\r\n                                alignleft aligncenter alignright alignjustify | \\\r\n                                bullist numlist outdent indent | removeformat | help'\r\n                        }}\r\n                        onEditorChange={handleEditorChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <select name=\"categoryId\" className=\"form-control\" onChange={handleChange}>\r\n                        {arrProjectCategory.map((item, index) => {\r\n                            return <option value={item.id} key={index}>{item.projectCategoryName}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <button className=\"btn btn-outline-primary\" type=\"submit\">Create project</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst createProjectForm = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        console.log('propvalue', props)\r\n        return {\r\n            projectName: '',\r\n            description: '',\r\n            categoryId: props.arrProjectCategory[0]?.id\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n\r\n        props.dispatch({ \r\n            type: 'CREATE_PROJECT_SAGA',\r\n            newProject: values \r\n        })\r\n\r\n\r\n    },\r\n    displayName: 'CreateProjectFormik',\r\n})(CreateProject);\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    arrProjectCategory: state.ProjectCategoryReducer.arrProjectCategory\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(createProjectForm);","import { Editor } from '@tinymce/tinymce-react'\r\nimport { withFormik } from 'formik';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nfunction FormEditProject(props) {\r\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        setValues,\r\n        setFieldValue\r\n    } = props;\r\n\r\n\r\n\r\n\r\n    // const submitForm = (e) => {\r\n    //     e.preventDefault();\r\n    //     alert('submit edit');\r\n    // }\r\n\r\n    //componentdidmount\r\n    useEffect(() => {\r\n\r\n        //Gọi api load project category \r\n        dispatch({ type: 'GET_ALL_PROJECT_CATEGORY_SAGA' })\r\n\r\n\r\n        //Load sự kiện submit lên drawer nút submit\r\n        dispatch({ type: 'SET_SUBMIT_EDIT_PROJECT', submitFunction: handleSubmit });\r\n        \r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const handleEditorChange = (content, editor) => {\r\n        setFieldValue('description', content)\r\n    }\r\n\r\n    return (\r\n        <form className=\"container-fuild\" onSubmit={handleSubmit}>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Project id</p>\r\n                        <input value={values.id} disabled className=\"form-control\" name=\"id\" />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Project name</p>\r\n                        <input value={values.projectName} className=\"form-control\" name=\"projectName\" onChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Project Category</p>\r\n                        <select className=\"form-control\" name=\"categoryId\" value={values.categoryId}>\r\n                            {arrProjectCategory?.map((item, index) => {\r\n                                return <option key={index} value={item.id}>\r\n                                    {item.projectCategoryName}\r\n                                </option>\r\n                            })}\r\n                        </select>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Description</p>\r\n                        <Editor\r\n\r\n                            name=\"description123\"\r\n                            initialValue={values.description}\r\n                            value = {values.description}\r\n                            init={{\r\n                                selector: 'textarea#myTextArea',\r\n                                height: 500,\r\n                            \r\n                                menubar: false,\r\n                                plugins: [\r\n                                    'advlist autolink lists link image charmap print preview anchor',\r\n                                    'searchreplace visualblocks code fullscreen',\r\n                                    'insertdatetime media table paste code help wordcount'\r\n                                ],\r\n                                toolbar:\r\n                                    'undo redo | formatselect | bold italic backcolor | \\\r\n        alignleft aligncenter alignright alignjustify | \\\r\n        bullist numlist outdent indent | removeformat | help'\r\n                            }}\r\n                            onEditorChange={handleEditorChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst EditProjectForm = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        const { projectEdit } = props;\r\n\r\n        return {\r\n            id: projectEdit?.id,\r\n            projectName: projectEdit.projectName,\r\n            description: projectEdit.description,\r\n            categoryId: projectEdit.categoryId\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n\r\n        //Khi người dùng bấm submit => đưa dữ liệu về backedn thông qua api\r\n        // const action = {\r\n        //     type:'UPDATE_PROJECT_SAGA',\r\n        //     prjectUpdate:values\r\n        // }\r\n        //Gọi saga\r\n        props.dispatch({\r\n            type:'UPDATE_PROJECT_SAGA',\r\n            prjectUpdate:values\r\n        })\r\n\r\n    },\r\n    displayName: 'EditProjectForm',\r\n})(FormEditProject);\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    projectEdit: state.ProjectReducer.projectEdit\r\n\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(EditProjectForm);","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Table, Tag, Space, Button, Avatar, Popconfirm, message, Popover, AutoComplete } from 'antd';\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { FormOutlined, DeleteOutlined,CloseSquareOutlined } from '@ant-design/icons'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport FormEditProject from '../../../components/Forms/FormEditProject.js/FormEditProject';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { USER_LOGIN } from '../../../util/constants/settingSystem';\r\n\r\n\r\n\r\nexport default function ProjectManagement(props) {\r\n    \r\n    //Lấy dữ liệu từ reducer về component\r\n    const projectList = useSelector(state => state.ProjectCyberBugsReducer.projectList);\r\n    \r\n    const { userSearch } = useSelector(state => state.UserLoginCyberBugsReducer);\r\n\r\n    const [value, setValue] = useState('');\r\n    \r\n    const searchRef = useRef(null);\r\n    \r\n    //Sử dụng useDispatch để gọi action\r\n    const dispatch = useDispatch();\r\n    const [state, setState] = useState({\r\n        filteredInfo: null,\r\n        sortedInfo: null,\r\n    });\r\n    \r\n    useEffect(() => {\r\n        dispatch({ type: 'GET_LIST_PROJECT_SAGA' })\r\n    }, [])\r\n    \r\n    if (!localStorage.getItem(USER_LOGIN)) {\r\n        alert('Bạn không có quyền truy cập vào trang này !')\r\n        return <Redirect to='/signup' />\r\n    }\r\n    const handleChange = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n        });\r\n    };\r\n\r\n    const clearFilters = () => {\r\n        setState({ filteredInfo: null });\r\n    };\r\n\r\n    const clearAll = () => {\r\n        setState({\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n        });\r\n    };\r\n\r\n    const setAgeSort = () => {\r\n        setState({\r\n            sortedInfo: {\r\n                order: 'descend',\r\n                columnKey: 'age',\r\n            },\r\n        });\r\n    };\r\n\r\n    let { sortedInfo, filteredInfo } = state;\r\n    sortedInfo = sortedInfo || {};\r\n    filteredInfo = filteredInfo || {};\r\n    const columns = [\r\n        {\r\n            title: 'id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            sorter: (item2, item1) => {\r\n                return item2.id - item1.id;\r\n            },\r\n            sortDirections: ['descend'],\r\n\r\n        },\r\n        {\r\n            title: 'projectName',\r\n            dataIndex: 'projectName',\r\n            key: 'projectName',\r\n            render: (text,record,index) => {\r\n                return <NavLink to={`/projectdetail/${record.id}`}> {text}</NavLink>\r\n            },\r\n            sorter: (item2, item1) => {\r\n                let projectName1 = item1.projectName?.trim().toLowerCase();\r\n                let projectName2 = item2.projectName?.trim().toLowerCase();\r\n                if (projectName2 < projectName1) {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            },\r\n\r\n\r\n        },\r\n        // {\r\n        //     title: 'description',\r\n        //     dataIndex: 'description',\r\n        //     key: 'description',\r\n        //     render: (text, record, index) => {\r\n        //         let contentJSX = ReactHtmlParser(text);\r\n\r\n        //         return <div>\r\n        //             {contentJSX}\r\n        //         </div>\r\n        //     }\r\n        // },\r\n\r\n        {\r\n            title: 'category',\r\n            dataIndex: 'categoryName',\r\n            key: 'categoryName',\r\n            sorter: (item2, item1) => {\r\n                let categoryName1 = item1.categoryName?.trim().toLowerCase();\r\n                let categoryName2 = item2.categoryName?.trim().toLowerCase();\r\n                if (categoryName2 < categoryName1) {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            },\r\n\r\n        },\r\n        {\r\n            title: 'creator',\r\n            // dataIndex: 'creator',\r\n            key: 'creator',\r\n            render: (text, record, index) => {\r\n                return <Tag color=\"green\">{record.creator?.name}</Tag>\r\n            },\r\n            sorter: (item2, item1) => {\r\n                let creator1 = item1.creator?.name.trim().toLowerCase();\r\n                let creator2 = item2.creator?.name.trim().toLowerCase();\r\n                if (creator2 < creator1) {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            },\r\n\r\n        },\r\n        {\r\n            title: 'members',\r\n            key: 'members',\r\n            render: (text, record, index) => {\r\n                return <div>\r\n                    {record.members?.slice(0, 3).map((member, index) => {\r\n                        return (\r\n                            <Popover key={index} placement=\"top\" title=\"members\" content={() => {\r\n                                return <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Id</th>\r\n                                            <th>avatar</th>\r\n                                            <th>name</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {record.members?.map((item, index) => {\r\n                                            return <tr key={index}>\r\n                                                <td>{item.userId}</td>\r\n                                                <td><img src={item.avatar} width=\"30\" height=\"30\" style={{borderRadius:'15px'}} /></td>\r\n                                                <td>{item.name}</td>\r\n                                                <td>\r\n                                                    <button onClick={()=>{\r\n                                                        dispatch({\r\n                                                            type:'REMOVE_USER_PROJECT_API',\r\n                                                            userProject: {\r\n                                                                userId:item.userId,\r\n                                                                projectId: record.id\r\n                                                            }\r\n                                                        })\r\n\r\n                                                    }} className=\"btn btn-danger\" style={{borderRadius:'50%'}}>X</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            }}>\r\n                                <Avatar key={index} src={member.avatar} />\r\n                            </Popover>\r\n                        )\r\n                    })}\r\n\r\n                    {record.members?.length > 3 ? <Avatar>...</Avatar> : ''}\r\n\r\n                    <Popover placement=\"rightTop\" title={\"Add user\"} content={() => {\r\n                        return <AutoComplete\r\n\r\n                            options={userSearch?.map((user, index) => {\r\n                                return { label: user.name, value: user.userId.toString() }\r\n                            })}\r\n\r\n                            value={value}\r\n\r\n                            onChange={(text) => {\r\n                                setValue(text);\r\n                            }}\r\n\r\n                            onSelect={(valueSelect, option) => {\r\n                                //set giá trị của hộp thọa = option.label\r\n                                setValue(option.label);\r\n                                //Gọi api gửi về backend\r\n                                dispatch({\r\n                                    type: 'ADD_USER_PROJECT_API',\r\n                                    userProject: {\r\n                                        \"projectId\": record.id,\r\n                                        \"userId\": valueSelect\r\n                                    }\r\n                                })\r\n\r\n\r\n                            }}\r\n                            style={{ width: '100%' }} onSearch={(value) => {\r\n                                    \r\n                                if(searchRef.current) {\r\n                                    clearTimeout(searchRef.current);\r\n                                }\r\n                                searchRef.current = setTimeout(()=>{\r\n                                    dispatch({\r\n                                        type: 'GET_USER_API',\r\n                                        keyWord: value\r\n                                    })\r\n    \r\n                                },300)\r\n                               \r\n                            }} />\r\n                    }} trigger=\"click\">\r\n                        <Button style={{ borderRadius: '50%' }}>+</Button>\r\n                    </Popover>\r\n                </div>\r\n            }\r\n\r\n        },\r\n\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '',\r\n            key: 'x',\r\n            render: (text, record, index) => {\r\n                return <div>\r\n                    <button className=\"btn mr-2 btn-primary\" onClick={() => {\r\n                        const action = {\r\n                            type: 'OPEN_FORM_EDIT_PROJECT',\r\n                            title:'Edit Project',\r\n                            Component: <FormEditProject />,\r\n                        }\r\n\r\n                        //dispatch lên reducer nội dung drawer\r\n                        dispatch(action);\r\n                        //dispatch dữ liệu dòng hiện tai lên reducer\r\n                        const actionEditProject = {\r\n                            type: 'EDIT_PROJECT',\r\n                            projectEditModel: record\r\n                        }\r\n                        dispatch(actionEditProject);\r\n                    }}>\r\n                        <FormOutlined style={{ fontSize: 17 }} />\r\n                    </button>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this project?\"\r\n                        onConfirm={() => {\r\n                            dispatch({ type: 'DELETE_PROJECT_SAGA', idProject: record.id })\r\n                        }}\r\n\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <button className=\"btn btn-danger\">\r\n                            <DeleteOutlined style={{ fontSize: 17 }} />\r\n                        </button>\r\n                    </Popconfirm>\r\n\r\n                </div>\r\n            },\r\n        }\r\n    ];\r\n    return (\r\n        <div className=\"container-fluid m-5\">\r\n            <h3>Project management</h3>\r\n            <Space style={{ marginBottom: 16 }}>\r\n                <Button onClick={setAgeSort}>Sort age</Button>\r\n                <Button onClick={clearFilters}>Clear filters</Button>\r\n                <Button onClick={clearAll}>Clear filters and sorters</Button>\r\n            </Space>\r\n            <Table columns={columns} rowKey={\"id\"} dataSource={projectList} onChange={handleChange} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nexport default function DrawerCyberBugs(props) {\r\n\r\n\r\n\r\n    const { visible, ComponentContentDrawer,callBackSubmit,title } = useSelector(state => state.drawerReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    console.log('visible', visible)\r\n\r\n\r\n    const showDrawer = () => {\r\n        dispatch({ type: 'OPEN_DRAWER' });\r\n    };\r\n\r\n    const onClose = () => {\r\n        dispatch({ type: 'CLOSE_DRAWER' });\r\n\r\n    };\r\n    return (\r\n        <>\r\n            {/* <button onClick={showDrawer}>showdrawer</button> */}\r\n            <Drawer\r\n                title={title}\r\n                width={720}\r\n                onClose={onClose}\r\n                visible={visible}\r\n                bodyStyle={{ paddingBottom: 80 }}\r\n\r\n                footer={\r\n                    <div\r\n                        style={{\r\n                            textAlign: 'right',\r\n                        }}\r\n                    >\r\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={callBackSubmit} type=\"primary\">\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                {/* Nội dung thay đổi của drawer */}\r\n                {ComponentContentDrawer}\r\n     \r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\n\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nimport './DemoDragDrop.css'\r\n\r\n\r\nconst defaultValue = [\r\n    { id: 1, taskName: 'Task 1' },\r\n    { id: 2, taskName: 'Task 2' },\r\n    { id: 3, taskName: 'Task 3' },\r\n    { id: 4, taskName: 'Task 4' },\r\n    { id: 5, taskName: 'Task 5' },\r\n];\r\n\r\n\r\nexport default function DemoDragDrop(props) {\r\n\r\n    const [taskList, setTaskList] = useState(defaultValue);\r\n    const tagDrag = useRef({})\r\n    const tagDragEnter = useRef({});\r\n    //Animation\r\n    const [propsSpring, set, stop] = useSpring(() => ({ from: { bottom: -25 }, to: { bottom: 0 },config:{duration:250},reset:true }));\r\n\r\n\r\n\r\n    const handleDragStart = (e, task, index) => {\r\n        console.log(e.target);\r\n        console.log('dragEnd');\r\n        //Lưu lại giá trị của task đang drag\r\n        tagDrag.current = task;\r\n    }\r\n\r\n\r\n    const handleDragEnter = (e, taskDragEnter, index) => {\r\n        // console.log('dragEnterTag',e.target)\r\n        // console.log('targertOver',task)\r\n        // console.log('index',index)\r\n        //Lưu lại giá trị của task được kéo ngang qua\r\n        set({bottom:0});\r\n        tagDragEnter.current = { ...taskDragEnter };\r\n\r\n        let taskListUpdate = [...taskList];\r\n        //Láy ra index thằng đang kéo\r\n        let indexDragTag = taskListUpdate.findIndex(task => task.id === tagDrag.current.id);\r\n        //Lấy ra index thằng bị kéo qua \r\n        let indexDragEnter = taskListUpdate.findIndex(task => task.id === taskDragEnter.id);\r\n\r\n        //Bién6 chứa giá trị thằng đang kéo\r\n        let temp = taskListUpdate[indexDragTag];\r\n        //Lấy giá trị tại vi trí đang kéo gán = thằng kéo qua\r\n        taskListUpdate[indexDragTag] = taskListUpdate[indexDragEnter];\r\n        //Lấy thằng kéo qua gán = đang keo\r\n        taskListUpdate[indexDragEnter] = temp;\r\n\r\n\r\n\r\n        setTaskList(taskListUpdate);\r\n\r\n\r\n    }\r\n\r\n    const handleDragEnd = (e) => {\r\n       \r\n    }\r\n    const handleDrop = (e) => {\r\n        // console.log('drop', e.target);\r\n    }\r\n    return (\r\n        <div className=\"container\" onDragOver={(e)=> {\r\n            e.stopPropagation();\r\n             e.preventDefault();\r\n\r\n         }}  onDrop={(e)=> {\r\n\r\n            tagDrag.current = {};\r\n            console.log('dragEnd')\r\n            setTaskList([...taskList])\r\n\r\n         }}>\r\n            <div className=\"text-center display-4\">Task list</div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n                <div className=\"bg-dark p-5 col-4\">\r\n                    {taskList.map((task, index) => {\r\n\r\n                        let cssDragTag = task.id === tagDrag.current.id ? 'dragTag' : '';\r\n\r\n                        if (task.id === tagDragEnter.current.id) {\r\n                            return <animated.div\r\n                                style={{\r\n                                    position:'relative',\r\n                                    bottom: propsSpring.bottom.interpolate(numBottom => `${numBottom}px`)\r\n                                }}\r\n                                onDragStart={(e) => { handleDragStart(e, task, index) }}\r\n                                onDragEnter={(e) => { handleDragEnter(e, task, index) }}\r\n                                onDragEnd={(e) => { handleDragEnd(e) }}\r\n                                draggable=\"true\"\r\n                                key={index}\r\n                                className={`bg-success text-white m-1 p-3`}\r\n                            >\r\n\r\n\r\n                                {task.taskName}\r\n\r\n\r\n                            </animated.div>\r\n                        }\r\n\r\n                        return <div\r\n                            onDragStart={(e) => { handleDragStart(e, task, index) }}\r\n                            onDragEnter={(e) => { handleDragEnter(e, task, index) }}\r\n                            onDragEnd={(e) => { handleDragEnd(e) }}\r\n                            draggable=\"true\"\r\n                            key={index}\r\n                            className={`bg-success text-white m-1 p-3 ${cssDragTag}`}>\r\n                            {task.taskName}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n                <div className=\"col-2 bg-primary\" style={{ height: 500 }} ></div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// onDragOver={(e)=>{\r\n//     e.stopPropagation();\r\n//     e.preventDefault();\r\n// }}","import React, { useRef, useState } from 'react';\r\nimport './Demo.css';\r\nimport { useSpring, useSprings, animated } from 'react-spring'\r\n\r\nconst defaultValue = [\r\n    { id: 1, taskName: 'Task 1' },\r\n    { id: 2, taskName: 'Task 2' },\r\n    { id: 3, taskName: 'Task 3' },\r\n    { id: 4, taskName: 'Task 4' },\r\n    { id: 5, taskName: 'Task 5' },\r\n]\r\n\r\n\r\nexport default function Demo(props) {\r\n\r\n    const [taskList, setTaskList] = useState(defaultValue);\r\n    const tagDrag = useRef({});\r\n    const tagDragEnter = useRef({});\r\n    const [propsSpring, set, stop] = useSpring(() => ({ to: { rotate: 25, bottom: 0 }, from: { rotate: 0, bottom: -50 }, config: { duration: 250 }, reset: true }))\r\n\r\n    const handleDragStart = (e, task, index) => {\r\n        console.log(e.target);\r\n        console.log(task);\r\n        //Lưu lại giá trị của task đang drag\r\n        tagDrag.current = task;\r\n    }\r\n\r\n\r\n    const handleDragEnter = (e, taskDragEnter, index) => {\r\n        // console.log('dragEnterTag',e.target)\r\n        // console.log('targertOver',task)\r\n        // console.log('index',index)\r\n        set({ bottom: 0 })\r\n       \r\n\r\n        let taskListUpdate = [...taskList];\r\n        //Láy ra index thằng đang kéo\r\n        let indexDragTag = taskListUpdate.findIndex(task => task.id === tagDrag.current.id);\r\n        //Lấy ra index thằng bị kéo qua \r\n        let indexDragEnter = taskListUpdate.findIndex(task => task.id === taskDragEnter.id);\r\n\r\n        //Bién6 chứa giá trị thằng đang kéo\r\n        let temp = taskListUpdate[indexDragTag];\r\n        //Lấy giá trị tại vi trí đang kéo gán = thằng kéo qua\r\n        taskListUpdate[indexDragTag] = taskListUpdate[indexDragEnter];\r\n        //Lấy thằng kéo qua gán = đang keo\r\n        taskListUpdate[indexDragEnter] = temp;\r\n\r\n        tagDragEnter.current = taskDragEnter;\r\n\r\n        setTaskList(taskListUpdate);\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleDragEnd = (e) => {\r\n\r\n\r\n    }\r\n    const handleDrop = (e) => {\r\n        // console.log('drop', e.target);\r\n    }\r\n    return (\r\n        <div className=\"container\" onDragOver={(e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        }}\r\n            onDrop={(e) => {\r\n                tagDrag.current = {}\r\n                setTaskList([...taskList])\r\n            }}\r\n        >\r\n            <div className=\"text-center display-4\">Task list</div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n                <div className=\"bg-dark p-5 col-4\">\r\n                    {taskList.map((task, index) => {\r\n\r\n                        let cssDrag = task.id === tagDrag.current.id ? 'tagDrag' : ''\r\n                        let cssDragEnter = tagDragEnter.current.id == task.id ? 'tagDragEnter' : '';\r\n                        if (cssDragEnter !== '') {\r\n                            return <animated.div\r\n                                style={{\r\n                                    transform: propsSpring.bottom.interpolate(r => `${r}px`),\r\n                                    position: 'relative',\r\n                                    bottom: propsSpring.bottom.interpolate(r => `${r}px`),\r\n\r\n\r\n                                }}\r\n\r\n                                onDragStart={(e) => { handleDragStart(e, task, index) }}\r\n                                onDragEnter={(e) => { handleDragEnter(e, task, index) }}\r\n                                draggable=\"true\"\r\n                                onDragEnd={(e) => { handleDragEnd(e) }}\r\n                                onDragLeave={(e) => { handleDragEnd(e) }}\r\n                                key={index}\r\n                                className={`bg-success text-white m-1 p-3 ${cssDrag} ${cssDragEnter}`}>\r\n                                {task.taskName}\r\n                            </animated.div>\r\n                        } else {\r\n                            return <div\r\n\r\n                                onDragStart={(e) => { handleDragStart(e, task, index) }}\r\n                                onDragEnter={(e) => { handleDragEnter(e, task, index) }}\r\n                                draggable=\"true\"\r\n                                onDragEnd={(e) => { handleDragEnd(e) }}\r\n                                onDragLeave={(e) => { handleDragEnd(e) }}\r\n\r\n                                key={index}\r\n                                className={`bg-success text-white m-1 p-3 ${cssDrag} ${cssDragEnter}`}>\r\n                                {task.taskName}\r\n                            </div>\r\n                        }\r\n                    })}\r\n                </div>\r\n                <div className=\"col-2 bg-primary\" style={{ height: 500 }} ></div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// onDragOver={(e)=>{\r\n//     e.stopPropagation();\r\n//     e.preventDefault();\r\n// }}","import React, { useState } from 'react'\r\nimport _ from 'lodash'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function DragAndDropDnD(props) {\r\n\r\n    const [state, setState] = useState({\r\n        toDo: {\r\n            id: 'toDo',\r\n            items: [\r\n                { id: '1', taskName: 'Task 1' },\r\n                { id: '2', taskName: 'Task 2' },\r\n                { id: '3', taskName: 'Task 3' },\r\n            ]\r\n        },\r\n        inProgress: {\r\n            id: 'inProgress',\r\n            items: [\r\n                { id: '4', taskName: 'Task 4' },\r\n                { id: '5', taskName: 'Task 5' },\r\n                { id: '6', taskName: 'Task 6' },\r\n            ]\r\n        },\r\n        done: {\r\n            id: 'done',\r\n            items: [\r\n                { id: '7', taskName: 'Task 7' },\r\n                { id: '8', taskName: 'Task 8' },\r\n                { id: '9', taskName: 'Task 9' },\r\n            ]\r\n        }\r\n    })\r\n\r\n    const handleDragEnd = (result) => { \r\n        let {destination,source} = result;\r\n\r\n        if(!destination){\r\n            return ;\r\n        }\r\n\r\n        if(destination.index === source.index && destination.droppableId === source.droppableId){\r\n            return;\r\n        }\r\n\r\n        //tạo ra 1 tag drag\r\n        let itemCopy = {...state[source.droppableId].items[source.index]};\r\n        console.log('itemCopy',itemCopy)\r\n\r\n        //Droppable bắt đầu kéo\r\n        let index = state[source.droppableId].items.findIndex(item => item.id == itemCopy.id);\r\n        \r\n        state[source.droppableId].items.splice(index,1);\r\n\r\n        //Droppable thả vào\r\n        let dropDestination = state[destination.droppableId].items;\r\n\r\n        dropDestination.splice(destination.index, 0, itemCopy)\r\n\r\n\r\n        setState(state);\r\n        \r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3 className=\"text-center display-4\">Demo DraggAndDropp DND</h3>\r\n\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n\r\n                <div className=\"row\">\r\n                    {_.map(state, (statusTask, index) => {\r\n                        return <Droppable droppableId={statusTask.id} key={index}>\r\n                            {(provided) => {\r\n                                return <div className=\"col-4\" >\r\n\r\n                                    <div className=\"bg-dark p-5\"\r\n                                        key={index}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.droppableProps}\r\n                                    >\r\n                                        <h3 className=\"text-white\">{statusTask.id}</h3>\r\n                                        {statusTask.items.map((item, index) => {\r\n                                            return <Draggable key={item.id} index={index} draggableId={item.id}>\r\n                                                {(provided) => {\r\n                                                    return <div\r\n                                                        ref={provided.innerRef}\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}\r\n                                                        className=\"mt-2 p-2 bg-white text-center\">\r\n                                                        {item.taskName}\r\n                                                    </div>\r\n                                                }}\r\n                                            </Draggable>\r\n\r\n\r\n                                        })}\r\n\r\n\r\n                                        {provided.placeholder}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            }}\r\n\r\n                        </Droppable>\r\n                    })}\r\n\r\n                </div>\r\n            </DragDropContext>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { withFormik } from 'formik';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { Button, Input } from 'antd';\r\nimport { UserOutlined, LockOutlined, InfoCircleOutlined, PhoneOutlined, TwitterOutlined } from '@ant-design/icons';\r\nimport { SIGN_UP_USER_SAGA } from '../../../redux/constants/Cyberbugs/UsersContants';\r\nimport { values } from 'lodash';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nfunction SignUpCyberBugs(props) {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"container\" >\r\n            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ height: window.innerHeight }} >\r\n                <h3 className=\"text-center\" style={{ fontWeight: 300, fontSize: 35 }}>Sign up</h3>\r\n                <div className=\"d-flex mt-3\" >\r\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} name=\"email\" size=\"large\" placeholder=\"email\" prefix={<UserOutlined />} />\r\n                </div>\r\n                <div className=\"text-danger\">{errors.email}</div>\r\n                <div className=\"d-flex mt-3\">\r\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} type=\"text\" name=\"passWord\" size=\"large\" placeholder=\"password\" prefix={<LockOutlined />} />\r\n                </div>\r\n                <div className=\"text-danger\">{errors.passWord}</div>\r\n                <div className=\"d-flex mt-3\">\r\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} type=\"text\" name=\"phoneNumber\" size=\"large\" placeholder=\"phone number\" maxLength={13} prefix={<PhoneOutlined />} />\r\n                </div>\r\n                <div className=\"text-danger\">{errors.phoneNumber}</div>\r\n                <div className=\"d-flex mt-3\">\r\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} type=\"text\" name=\"name\" size=\"large\" placeholder=\"name\" prefix={<InfoCircleOutlined />} />\r\n                </div>\r\n                <div className=\"text-danger\">{errors.name}</div>\r\n\r\n                <Button htmlType=\"submit\" size=\"large\" style={{ minWidth: 300, backgroundColor: 'rgb(102,117,223)', color: '#fff' }} className=\"mt-5\">Sign up</Button>\r\n                <div className='mt-2'>If you have account? Let's login.</div>\r\n                <NavLink to='/login' style={{ minWidth: 300, backgroundColor: 'rgb(102,117,223)', color: '#fff', textAlign: 'center', padding: '8px', fontSize: '16px' }} className=\"mt-2\">Login</NavLink>\r\n\r\n\r\n                <div className=\"social mt-3 d-flex\">\r\n                    <Button style={{ backgroundColor: 'rgb(59,89,152)' }} shape=\"circle\" size={\"large\"}>\r\n                        <span className=\"font-weight-bold\" style={{ color: '#fff' }} >F</span>\r\n                    </Button>\r\n                    <Button type=\"primary ml-3\" shape=\"circle\" icon={<TwitterOutlined />} size={\"large\"}>\r\n\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\nconst SignupWithFormik = withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        passWord: '',\r\n        phoneNumber: '',\r\n        name: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().required('Email is required!').email('email is invalid!'),\r\n        passWord: Yup.string().min(6, 'password must have min 6 characters').max(32, 'password  have max 32 characters').required('password is required!'),\r\n        phoneNumber: Yup.string().min(10, 'phone number must have 10 number!').required('phone number is required!'),\r\n        name: Yup.string().required('name is required!')\r\n    }),\r\n    handleSubmit: ({ email, passWord, phoneNumber, name }, { props, setSubmitting }) => {\r\n        \r\n        const newUser = {\r\n            email,\r\n            passWord,\r\n            phoneNumber,\r\n            name\r\n        }\r\n        console.log(newUser)\r\n        setSubmitting(true);\r\n        props.dispatch({\r\n            type: SIGN_UP_USER_SAGA,\r\n            newUser\r\n        });\r\n\r\n    },\r\n    handleChange: (phoneNumber) => {\r\n        console.log(\"chay haldle change\")\r\n    },\r\n\r\n    displayName: 'Register To Cyberbugs',\r\n})(SignUpCyberBugs);\r\n\r\nexport default connect()(SignupWithFormik);","import { withFormik } from 'formik';\r\nimport React, { useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { EDIT_USER_SAGA } from '../../../redux/constants/Cyberbugs/UsersContants';\r\n\r\nfunction FormEditUser(props) {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: 'SET_SUBMIT_FORM_EDIT_USER',\r\n            submitFunction: handleSubmit\r\n        })\r\n    }, []);\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        setValues,\r\n        setFieldValue\r\n    } = props;\r\n\r\n    return (\r\n        <form className=\"container-fuild\" onSubmit={handleSubmit}>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">User ID</p>\r\n                        <input disabled value={values.userId} className=\"form-control\" name=\"userId\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">User Name</p>\r\n                        <input value={values.name} className=\"form-control\" name=\"name\" onChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Email</p>\r\n                        <input className=\"form-control\" value={values.email} name=\"email\" onChange={handleChange} />\r\n                        <div className='text-danger'>{errors.email}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Phone Number</p>\r\n                        <input className=\"form-control\" value={values.phoneNumber} name=\"phoneNumber\" onChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    )\r\n}\r\nconst EditUserForm = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        const { user } = props;\r\n\r\n        return {\r\n            userId: user.userId,\r\n            name: user.name,\r\n            email: user.email,\r\n            phoneNumber: user.phoneNumber\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().email()\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n        const user = {\r\n            id: values.userId,\r\n            name: values.name,\r\n            email: values.email,\r\n            phoneNumber: values.phoneNumber\r\n        }\r\n        //Gọi saga\r\n        props.dispatch({\r\n            type: EDIT_USER_SAGA,\r\n            user\r\n        })\r\n    },\r\n    displayName: 'EditProjectForm',\r\n})(FormEditUser);\r\nconst mapStateToProps = (state) => ({\r\n   \r\n})\r\n\r\nexport default connect(mapStateToProps)(EditUserForm);","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Avatar, Menu, Dropdown, Space, Input, Table, Popconfirm } from 'antd';\r\nimport { UserOutlined, DownOutlined, SmileOutlined, DeleteOutlined, FormOutlined } from '@ant-design/icons';\r\nimport './UsersManagement.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DELETE_USER_SAGA, GET_ALL_USER_SAGA } from '../../../redux/constants/Cyberbugs/UsersContants';\r\nimport EditUserForm from '../../../components/Forms/FormEditUser/FormEditUser';\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\n\r\nfunction onChange(pagination, filters, sorter, extra) {\r\n}\r\n\r\nexport default function UsersManagement(props) {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: GET_ALL_USER_SAGA\r\n        })\r\n    }, []);\r\n    const searchUser = (e) => {\r\n        const keyWord = e.target.value;\r\n        console.log(keyWord);\r\n        dispatch({\r\n            type: GET_ALL_USER_SAGA,\r\n            keyWord: keyWord\r\n        })\r\n    }\r\n    let data = useSelector((state) => state.UserLoginCyberBugsReducer.arrUser).map((item, index) => {\r\n        return { ...item, key: index + 1 }\r\n    });\r\n    const columns = [\r\n        {\r\n            title: 'STT',\r\n            dataIndex: 'key',\r\n            filterSearch: false,\r\n            sorter: (a, b) => a.key - b.key\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: '40%',\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phoneNumber',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: ['userId', 'name', 'email', 'phoneNumber'],\r\n            // key: 'x',\r\n            render: (text, record, index) => {\r\n                return <div>\r\n                    <button className=\"btn mr-2 btn-primary\" onClick={() => {\r\n                        const user = {\r\n                            userId: record.userId,\r\n                            name: record.name,\r\n                            email: record.email,\r\n                            phoneNumber: record.phoneNumber\r\n                        }\r\n                        dispatch({\r\n                            type: 'OPEN_FORM_EDIT_USER',\r\n                            title: 'Edit User',\r\n                            Component: <EditUserForm user={user} />,\r\n                        })\r\n                    }}>\r\n                        <FormOutlined style={{ fontSize: 17 }} />\r\n                    </button>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this project?\"\r\n                        onConfirm={() => {\r\n                            dispatch({\r\n                                type: DELETE_USER_SAGA,\r\n                                userId: record.userId\r\n                            })\r\n                        }}\r\n\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <button className=\"btn btn-danger\">\r\n                            <DeleteOutlined style={{ fontSize: 17 }} />\r\n                        </button>\r\n                    </Popconfirm>\r\n\r\n                </div>\r\n            },\r\n        }\r\n    ];\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <div className='d-flex align-items-center justify-content-end my-4'>\r\n                <span>Chào!,  </span>\r\n                <strong className='mx-1'> Luân</strong>\r\n                <Avatar>\r\n                    LV\r\n                </Avatar>\r\n                <div class=\"dropdown dropleft\">\r\n                    <button class=\"btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n\r\n                    </button>\r\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                        <a className=\"dropdown-item\" href=\"\">Action</a>\r\n                        <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                        <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ marginTop: \"3.5rem\" }}>\r\n                <NavLink className=\"text-dark btn btn-primary\" to=\"/signup\">\r\n                    <h5 className='m-0'>Create User</h5>\r\n                </NavLink>\r\n                <Search\r\n                    placeholder=\"Search email , phone number account ...\"\r\n                    allowClear\r\n                    enterButton=\"Search\"\r\n                    className='mb-2 mt-4'\r\n                    onChange={(e) => { searchUser(e) }}\r\n                />\r\n            </div>\r\n\r\n\r\n            <Table columns={columns} dataSource={data} onChange={onChange} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter, NavLink, Route, Switch, useHistory } from 'react-router-dom';\r\nimport LoadingComponent from './components/GlobalSetting/LoadingComponent/LoadingComponent';\r\nimport Header from './components/Home/Header/Header';\r\nimport Modal from './HOC/Modal/Modal';\r\nimport About from './pages/About/About';\r\nimport BaiTapToDoListSaga from './pages/BaiTapToDoListSaga/BaiTapToDoListSaga';\r\nimport Contact from './pages/Contact/Contact';\r\nimport LoginCyberBugs from './pages/CyberBugs/LoginCyberBugs/LoginCyberBugs';\r\nimport DemoHOCModal from './pages/DemoHOCModal/DemoHOCModal';\r\nimport Detail from './pages/Detail/Detail';\r\nimport Home from './pages/Home/Home';\r\nimport Login from './pages/Login/Login';\r\nimport PageNotFound from './pages/PageNotFound/PageNotFound';\r\nimport Profile from './pages/Profile/Profile';\r\nimport Todolist from './pages/Todolist/Todolist';\r\nimport ToDoListRedux from './pages/Todolist/ToDoListRedux';\r\nimport TodolistRFC from './pages/Todolist/TodolistRFC';\r\nimport { HomeTemplate } from './templates/HomeTemplate/HomeTemplate';\r\nimport { UserLoginTemplate } from './templates/HomeTemplate/UserLoginTemplate';\r\nimport { useDispatch } from 'react-redux';\r\nimport { CyberbugsTemplate } from './templates/HomeTemplate/CyberbugsTemplate';\r\nimport indexCyberBugs from './pages/CyberBugs/ProjectDetail/indexCyberBugs';\r\nimport CreateProject from './pages/CyberBugs/CreateProject/CreateProject';\r\nimport ProjectManagement from './pages/CyberBugs/ProjectManagement/ProjectManagement';\r\nimport DrawerCyberBugs from './HOC/CyberbugsHOC/DrawerCyberBugs';\r\nimport NotificationComponent from './components/Notification/NotificationComponent';\r\nimport DemoDragDrop from './pages/DemoDragDrop/DemoDragDrop';\r\nimport Demo from './pages/Demo/Demo';\r\nimport DragAndDropDnD from './pages/DragAndDropDnD/DragAndDropDnD';\r\nimport SignUpCyberBugs from './pages/CyberBugs/SignupCyberBugs/SignupCyberBugs'\r\nimport UsersManagement from './pages/CyberBugs/UsersManagement/UsersManagement'\r\n\r\nfunction App() {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({ type: 'ADD_HISTORY', history: history });\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <Modal /> */}\r\n      <LoadingComponent />\r\n      <DrawerCyberBugs />\r\n      <Switch>\r\n\r\n        {/* <Route exact path='/home'  render={(propsRoute)=>{\r\n          return <div>\r\n                <Header />\r\n                <Home {...propsRoute} />\r\n          </div>\r\n        }}/> */}\r\n\r\n        <HomeTemplate path=\"/home\" exact Component={Home} />\r\n        <HomeTemplate exact path='/contact' Component={Contact} />\r\n        <HomeTemplate exact path='/about' Component={About} />\r\n        <HomeTemplate exact path='/dragdrop' Component={DemoDragDrop} />\r\n        <UserLoginTemplate exact path='/login' Component={LoginCyberBugs} />\r\n        <UserLoginTemplate exact path='/signup' Component={SignUpCyberBugs} />\r\n        <HomeTemplate exact path='/detail/:id' Component={Detail} />\r\n        <HomeTemplate exact path='/profile' Component={Profile} />\r\n        <HomeTemplate exact path='/todolistrfc' Component={TodolistRFC} />\r\n        <HomeTemplate exact path='/todolistrcc' Component={Todolist} />\r\n        <HomeTemplate exact path='/todolistredux' Component={ToDoListRedux} />\r\n        <HomeTemplate exact path='/todolistsaga' Component={BaiTapToDoListSaga} />\r\n        <HomeTemplate exact path='/demohocmodal' Component={DemoHOCModal} />\r\n        <HomeTemplate exact path='/demo' Component={Demo} />\r\n        <HomeTemplate exact path='/demodragdropdnd' Component={DragAndDropDnD} />\r\n        <CyberbugsTemplate exact path='/cyberbugs' Component={indexCyberBugs} />\r\n        <CyberbugsTemplate exact path='/createproject' Component={CreateProject} />\r\n        <CyberbugsTemplate exact path='/projectmanagement' Component={ProjectManagement} />\r\n        <CyberbugsTemplate exact path='/projectdetail/:projectId' Component={indexCyberBugs} />\r\n        <CyberbugsTemplate exact path='/' Component={ProjectManagement} />\r\n        <CyberbugsTemplate exact path='/usermanagement' Component={UsersManagement} />\r\n        <HomeTemplate path=\"*\" component={PageNotFound} />\r\n\r\n      </Switch>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { USER_SIGNIN_API } from \"../constants/Cyberbugs/Cyberbugs\";\r\nimport { GET_TASK_API } from \"../constants/ToDoListConst\"\r\n\r\n\r\nconst initialState = {\r\n    taskList:[]\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case GET_TASK_API:\r\n        state.taskList = action.taskList;\r\n        return { ...state }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { DISPLAY_LOADING, HIDE_LOADING } from \"../constants/LoadingConst\";\r\n\r\nconst initialState = {\r\n    isLoading:false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case DISPLAY_LOADING:\r\n        state.isLoading = true;\r\n        return { ...state }\r\n    case HIDE_LOADING:{\r\n        state.isLoading=false;\r\n        return {...state}\r\n    }\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst stateDefault = {\r\n    Component: <p>Nội dung mặc định</p>\r\n}\r\n\r\n\r\nexport const ModalReducer = (state = stateDefault,action) => {\r\n    switch(action.type) {\r\n        case 'OPEN_FORM' : {\r\n            state.Component = action.Component;\r\n            return {...state}\r\n        }\r\n\r\n\r\n        default : return {...state}\r\n    }\r\n}","import Axios from \"axios\";\r\nimport { DOMAIN } from \"../util/constants/settingSystem\"\r\n\r\nexport class ToDoListService {\r\n    constructor(){\r\n\r\n    }\r\n\r\n    getTaskApi = () => {\r\n        return Axios({\r\n            url: `${DOMAIN}/ToDoList/GetAllTask`,\r\n            method: 'GET'\r\n        })\r\n    }\r\n\r\n    addTaskApi = (taskName) => {\r\n        return Axios({\r\n            url: `${DOMAIN}/ToDoList/addTask`,\r\n            method: 'POST',\r\n            data: {\r\n                taskName:taskName\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteTaskApi = (taskName) => {\r\n        return Axios({\r\n            url: `${DOMAIN}/ToDoList/deleteTask?taskName=${taskName}`,\r\n            method: 'DELETE',\r\n        })\r\n    }\r\n\r\n    checkDoneTask = (taskName) => {\r\n        return Axios({\r\n            url: `${DOMAIN}/ToDoList/doneTask?taskName=${taskName}`,\r\n            method: 'PUT',\r\n        })\r\n    }\r\n\r\n    rejectTask = (taskName) => {\r\n        return Axios({\r\n            url: `${DOMAIN}/ToDoList/rejectTask?taskName=${taskName}`,\r\n            method: 'PUT',\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const toDoListService = new ToDoListService();\r\n\r\n","import Axios from 'axios'\r\nimport { call, delay, fork, take, takeEvery, takeLatest, put } from 'redux-saga/effects'\r\nimport { ADD_TASK_API, CHECK_TASK_API, DELETE_TASK_API, GET_TASKLIST_API, GET_TASK_API, REJECT_TASK_API } from '../constants/ToDoListConst';\r\nimport { toDoListService } from '../../services/ToDoListService'\r\nimport { STATUS_CODE } from '../../util/constants/settingSystem';\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../constants/LoadingConst';\r\n/*redux 2 loại action: \r\n    Loại 1: action => object (action thường)\r\n    Loại 2: action => function (thường dùng để xử lý api hoặc gọi các action khác )\r\n*/\r\n\r\n/*\r\n    01/01/2020 Khải viết chức năng getTask\r\n    Action saga lấy danh sách task từ api \r\n*/\r\nfunction* getTaskApiAction(action) {\r\n    //put giống dispatch action\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    try {\r\n        let { data, status } = yield call(toDoListService.getTaskApi)\r\n        yield delay(300);\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            //Sau khi lấy giá trị thành công dùng put (giống dispatch bên thunk) \r\n            yield put({\r\n                type: GET_TASK_API,\r\n                taskList: data\r\n            });\r\n        } else {\r\n            console.log('error')\r\n        }\r\n    }\r\n    catch (err) {\r\n        console.log('err')\r\n    }\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n\r\n}\r\n\r\nexport function* theoDoiActionGetTaskApi() {\r\n    yield takeLatest(GET_TASKLIST_API, getTaskApiAction)\r\n}\r\n\r\n/*\r\n    01/01/2020 Khải viết chức năng addTask\r\n    Action saga nghiệp vụ thêm task\r\n*/\r\n\r\nfunction* addTaskApiAction(action) {\r\n    const { taskName } = action;\r\n    //Gọi api\r\n    try {\r\n        const { data, status } = yield call(() => { return toDoListService.addTaskApi(taskName) });\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_TASKLIST_API\r\n            })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    //Hiển thị loading\r\n    //thành công thì load lại task = cách gọi lại action saga load tasklist\r\n}\r\n\r\nexport function* theoDoiActionAddTaskApi() {\r\n    yield takeLatest(ADD_TASK_API, addTaskApiAction)\r\n}\r\n\r\n/*\r\n    01/01/2020 Khải viết chức năng deleteTask\r\n    Action saga nghiệp vụ xóa task\r\n*/\r\n\r\nfunction* deleteTaskApi(action) {\r\n    console.log(action)\r\n    const { taskName } = action;\r\n    try {\r\n        //Gọi api deletetask\r\n        const { data, status } = yield call(() => {\r\n            return toDoListService.deleteTaskApi(taskName);\r\n        });\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            //Nếu thành công thì gọi lại action GET_TASKLIST_API(action saga thực thi)\r\n            yield put({\r\n                type: GET_TASKLIST_API,\r\n            })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiActionDeleteTask() {\r\n    yield takeLatest(DELETE_TASK_API, deleteTaskApi)\r\n}\r\n\r\n\r\n\r\n/*\r\n    01/01/2020 Khải viết chức năng deleteTask\r\n    Action saga thực hiện nghiệp vụ done task\r\n*/\r\n\r\nfunction* checkDoneTaskApi(action) {\r\n    const { taskName } = action;\r\n\r\n    try {\r\n        const { data, status } = yield call(() => {\r\n            return toDoListService.checkDoneTask(taskName);\r\n        });\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_TASKLIST_API\r\n            })\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiDoneTask() {\r\n    yield takeLatest(CHECK_TASK_API, checkDoneTaskApi)\r\n}\r\n\r\n\r\n\r\n/*\r\n    01/01/2020 Khải viết chức năng deleteTask\r\n    Action saga thực hiện nghiệp vụ reject task\r\n*/\r\nexport function* rejectTaskApi(action) {\r\n    const { taskName } = action;\r\n\r\n    try{\r\n        const {data,status} = yield call (()=>{\r\n            return toDoListService.rejectTask(taskName);\r\n        })\r\n        \r\n        if(status === STATUS_CODE.SUCCESS) {\r\n            yield put ({\r\n                type:GET_TASKLIST_API\r\n            })\r\n        }\r\n    }catch(err) {\r\n        console.log(err)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport function* theoDoiRejectTask() {\r\n    yield takeLatest(REJECT_TASK_API, rejectTaskApi)\r\n}\r\n\r\n","export const DISPLAY_LOADING = 'DISPLAY_LOADING';\r\nexport const HIDE_LOADING = 'HIDE_LOADING';","const { default: Axios } = require(\"axios\")\r\nconst { DOMAIN_CYBERBUG, TOKEN } = require(\"../util/constants/settingSystem\")\r\n\r\nexport const cyberbugsService = { \r\n    signinCyberBugs: (userLogin) => {\r\n       return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/Users/signin`,\r\n            method:'POST',\r\n            data: userLogin\r\n        }) \r\n    },\r\n    getAllProjectCategory: () => {\r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/ProjectCategory`,\r\n            method: 'GET'\r\n        })\r\n    },\r\n    createProject: (newProject) => {\r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/Project/createProject`,\r\n            method:'POST',\r\n            data:newProject\r\n        })\r\n    },\r\n    createProjectAuthorization : (newProject) => {\r\n        return Axios({\r\n            url: `${DOMAIN_CYBERBUG}/Project/createProjectAuthorize`,\r\n            method:'POST',\r\n            data:newProject,\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT \r\n        })\r\n    },\r\n    getListProject: () => {\r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/Project/getAllProject`,\r\n            method:'GET',\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\r\n        })\r\n    },\r\n    updateProject: (projectUpdate) => { \r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/Project/updateProject?projectId=${projectUpdate.id}`,\r\n            method:'PUT',\r\n            data:projectUpdate,\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n","import Axios from \"axios\"\r\nimport { DOMAIN_CYBERBUG, TOKEN } from \"../util/constants/settingSystem\"\r\n\r\nexport class baseService {\r\n    //put json về phía backend\r\n    put = (url,model) => {\r\n        return  Axios({\r\n            url:`${DOMAIN_CYBERBUG}/${url}`,\r\n            method:'PUT',\r\n            data:model,\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT\r\n        }) \r\n    }\r\n\r\n    post = (url,model) => {\r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/${url}`,\r\n            method:'POST',\r\n            data:model,\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT\r\n        }) \r\n    }\r\n\r\n\r\n    get = (url) => {\r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/${url}`,\r\n            method:'GET',\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\r\n        })\r\n    }\r\n\r\n    delete = (url) => {\r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/${url}`,\r\n            method:'DELETE',\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\r\n        })\r\n    }\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class UserService extends baseService {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    getUser = (keyWord) => {\r\n\r\n        return this.get(`Users/getUser?keyword=${keyWord}`);\r\n    }\r\n\r\n\r\n    assignUserProject = (userProject) => {\r\n        return this.post(`Project/assignUserProject`, userProject);\r\n    }\r\n\r\n\r\n    deleteUserFromProject = (userProject) => {\r\n        return this.post(`Project/removeUserFromProject`, userProject);\r\n    }\r\n\r\n\r\n    getUserByProjectId = (idProject) => {\r\n        return this.get(`Users/getUserByProjectId?idProject=${idProject}`)\r\n    }\r\n    //service sign up user viet dua theo class ke thua base service\r\n    signupUser = (newUser) => {\r\n        return this.post(`/Users/signup`, newUser)\r\n    }\r\n    getAllUser = (keyWord) => {\r\n        if (keyWord === '' || keyWord === undefined) {\r\n            return this.get(\"Users/getUser\")\r\n        }\r\n        return this.get(\"Users/getUser?keyword=\" + keyWord)\r\n    }\r\n    editUser = (user) => {\r\n        return this.put(\"Users/editUser\", user)\r\n    }\r\n    deleteUser = (userId) => {\r\n        return this.delete(\"Users/deleteUser?id=\" + userId)\r\n    }\r\n}\r\n\r\n\r\nexport const userService = new UserService();\r\n","import { notification } from \"antd\"\r\n\r\nexport const notifiFunction = (type, message, description = '') => {\r\n    notification[type]({ //action.typeNotification = success | warning | info | error,\r\n        message: message,\r\n        description: description\r\n    })\r\n}","import Axios from 'axios';\r\nimport { call, delay, fork, take, takeEvery, takeLatest, put, select } from 'redux-saga/effects';\r\nimport { cyberbugsService } from '../../../services/CyberbugsService';\r\nimport { USER_SIGNIN_API, USLOGIN } from '../../constants/Cyberbugs/Cyberbugs';\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../../constants/LoadingConst';\r\nimport { STATUS_CODE, TOKEN, USER_LOGIN } from '../../../util/constants/settingSystem'\r\n\r\nimport { history } from '../../../util/history';\r\nimport { userService } from '../../../services/UserService';\r\nimport { DELETE_USER_SAGA, EDIT_USER_SAGA, GET_ALL_USER, GET_USER_BY_PROJECT_ID, GET_USER_BY_PROJECT_ID_SAGA } from '../../constants/Cyberbugs/UsersContants';\r\nimport { array } from 'yup';\r\nimport { GET_ALL_USER_SAGA, SIGN_UP_USER_SAGA } from '../../constants/Cyberbugs/UsersContants';\r\nimport { notifiFunction } from '../../../util/Notification/notificationCyberbugs'\r\n\r\n//Quản lý các action saga \r\nfunction* signinSaga(action) {\r\n    // console.log(action);\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay(500);\r\n\r\n    //Gọi api \r\n    try {\r\n        const { data, status } = yield call(() => cyberbugsService.signinCyberBugs(action.userLogin));\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            //Lưu vào localstorage khi đăng nhập thành công\r\n            localStorage.setItem(TOKEN, data.content.accessToken);\r\n            localStorage.setItem(USER_LOGIN, JSON.stringify(data.content));\r\n\r\n            yield put({\r\n                type: USLOGIN,\r\n                userLogin: data.content\r\n            })\r\n        }\r\n        else {\r\n            yield put({\r\n                type: HIDE_LOADING\r\n            })\r\n            yield delay(500);\r\n            notifiFunction('error', 'Đăng nhập thất bại vui lòng thử lại sau!')\r\n            // let history = yield select(state=> state.HistoryReducer.history)\r\n        }\r\n\r\n        history.push('/');\r\n\r\n    } catch (err) {\r\n        console.log(err.response.data)\r\n        yield put({\r\n            type: HIDE_LOADING\r\n        })\r\n        yield delay(500);\r\n        notifiFunction('error', 'Đăng nhập thất bại vui lòng thử lại sau!')\r\n    }\r\n\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n\r\n}\r\n\r\n\r\nexport function* theoDoiSignin() {\r\n    yield takeLatest(USER_SIGNIN_API, signinSaga);\r\n}\r\n\r\n\r\n\r\n\r\n//Quản lý các action saga\r\nfunction* getUserSaga(action) {\r\n\r\n    //action.keyWord\r\n    console.log(\"keyword\", action.keyWord);\r\n    //Gọi api \r\n    try {\r\n        const { data, status } = yield call(() => userService.getUser(action.keyWord));\r\n\r\n        yield put({\r\n            type: 'GET_USER_SEARCH',\r\n            lstUserSearch: data.content\r\n        })\r\n        console.log(\"data\", data);\r\n\r\n    } catch (err) {\r\n        console.log(err.response.data)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiGetUser() {\r\n    yield takeLatest(\"GET_USER_API\", getUserSaga);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//Quản lý các action saga\r\nfunction* addUserProjectSaga(action) {\r\n\r\n\r\n    try {\r\n        const { data, status } = yield call(() => userService.assignUserProject(action.userProject));\r\n\r\n        yield put({\r\n            type: 'GET_LIST_PROJECT_SAGA'\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err.response.data)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiAddUserProject() {\r\n    yield takeLatest(\"ADD_USER_PROJECT_API\", addUserProjectSaga);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Quản lý các action saga\r\nfunction* removeUserProjectSaga(action) {\r\n\r\n\r\n    try {\r\n        const { data, status } = yield call(() => userService.deleteUserFromProject(action.userProject));\r\n\r\n        yield put({\r\n            type: 'GET_LIST_PROJECT_SAGA'\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err.response.data)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiRemoveUserProject() {\r\n    yield takeLatest(\"REMOVE_USER_PROJECT_API\", removeUserProjectSaga);\r\n}\r\n\r\n\r\n\r\n\r\nfunction* getUserByProjectIdSaga(action) {\r\n    const { idProject } = action;\r\n    console.log('action', idProject)\r\n\r\n    try {\r\n        const { data, status } = yield call(() => userService.getUserByProjectId(idProject));\r\n        console.log('checkdata', data);\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_USER_BY_PROJECT_ID,\r\n                arrUser: data.content\r\n            })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data);\r\n        if (err.response?.data.statusCode === STATUS_CODE.NOT_FOUND) {\r\n            yield put({\r\n                type: GET_USER_BY_PROJECT_ID,\r\n                arrUser: []\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiGetUserByProjectIdSaga() {\r\n    yield takeLatest(GET_USER_BY_PROJECT_ID_SAGA, getUserByProjectIdSaga)\r\n}\r\n\r\n//Saga dung de sign up user\r\nexport function* signupUserSaga(action) {\r\n    const { newUser } = action;\r\n    // console.log(action.newUser)\r\n    try {\r\n        const { data, status } = yield call(() => userService.signupUser(newUser));\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            history.push('/login');\r\n            notifiFunction('success', data.message)\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response?.data);\r\n        notifiFunction('error', error.response?.data.message)\r\n    }\r\n}\r\nexport function* theoDoiSignupUser() {\r\n    yield takeLatest(SIGN_UP_USER_SAGA, signupUserSaga)\r\n}\r\n\r\n//saga de lay tat ca thong tin user\r\nexport function* getAllUserSaga(action) {\r\n    const {keyWord} = action;\r\n    console.log('keyword' + keyWord);\r\n    try {\r\n        const { data, status } = yield call(() => userService.getAllUser(keyWord));\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_ALL_USER,\r\n                arrUser: data.content\r\n            })\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response?.data);\r\n        notifiFunction('error', error.response?.data.message)\r\n    }\r\n}\r\n\r\nexport function* theoDoiGetAllUserSaga() {\r\n    yield takeLatest(GET_ALL_USER_SAGA, getAllUserSaga)\r\n}\r\n\r\n//saga cap nhat thong tin user\r\nexport function* editUserSaga(action) {\r\n    try {\r\n        const { data, status } = yield call(() => userService.editUser(action.user));\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_ALL_USER_SAGA\r\n            });\r\n            yield put({\r\n                type: 'CLOSE_DRAWER'\r\n            })\r\n            notifiFunction('success', data.content);\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response?.data);\r\n        notifiFunction('error', error.response?.data.message)\r\n    }\r\n}\r\n\r\nexport function* theoDoiEditUserSaga() {\r\n    yield takeLatest(EDIT_USER_SAGA, editUserSaga)\r\n}\r\n\r\n//saga xoa user\r\nexport function* deleteUserSaga(action) {\r\n    try {\r\n        const { data, status } = yield call(() => userService.deleteUser(action.userId));\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_ALL_USER_SAGA\r\n            });\r\n            notifiFunction('success', data.content);\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response?.data);\r\n        notifiFunction('error', error.response?.data.message)\r\n    }\r\n}\r\n\r\nexport function* theoDoiDeleteUserSaga() {\r\n    yield takeLatest(DELETE_USER_SAGA, deleteUserSaga)\r\n}","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\r\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\r\nimport { GET_ALL_PROJECT_CATEGORY, GET_ALL_PROJECT_CATEGORY_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\r\n\r\nfunction* getAllProjectCategorySaga(action) {\r\n    console.log('actionSaga', action);\r\n\r\n    try {\r\n\r\n        //Gọi api lấy dữ liệu về\r\n        const { data, status } = yield call(() => cyberbugsService.getAllProjectCategory());\r\n\r\n\r\n\r\n        //Gọi api thành công thì dispatch lên reducer thông qua put\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_ALL_PROJECT_CATEGORY,\r\n                data: data.content\r\n            });\r\n        }\r\n\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function* theoDoigetAllProjectCategory() {\r\n    yield takeLatest(GET_ALL_PROJECT_CATEGORY_SAGA, getAllProjectCategorySaga);\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class ProjectService extends baseService {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    getAllProject = () => {\r\n        return this.get(`Project/getAllProject`);\r\n    }\r\n\r\n    deleteProject = (id) => {\r\n        \r\n       return this.delete(`Project/deleteProject?projectId=${id}`);\r\n    }\r\n\r\n    getProjectDetail = (projectId) => {\r\n        return this.get(`Project/getProjectDetail?id=${projectId}`);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const projectService = new ProjectService();\r\n","import { call, delay, put, takeLatest } from \"redux-saga/effects\";\r\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\r\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\r\nimport {history} from '../../../util/history';\r\nimport { projectService } from \"../../../services/ProjectService\";\r\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\r\nimport { GET_ALL_PROJECT, GET_ALL_PROJECT_SAGA } from \"../../constants/Cyberbugs/ProjectCyberBugsConstants\";\r\nimport { GET_USER_BY_PROJECT_ID_SAGA } from \"../../constants/Cyberbugs/UsersContants\";\r\nfunction* createProjectSaga(action) {\r\n\r\n    console.log('actionCreateProject',action)\r\n    //HIỂN THỊ LOADING\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay (500);\r\n\r\n    try {\r\n\r\n        //Gọi api lấy dữ liệu về\r\n        const { data, status } = yield call(() => cyberbugsService.createProjectAuthorization(action.newProject));\r\n        //Gọi api thành công thì dispatch lên reducer thông qua put\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            console.log(data)\r\n\r\n            history.push('/projectmanagement');\r\n        }\r\n\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n   \r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function* theoDoiCreateProjectSaga() {\r\n    yield takeLatest('CREATE_PROJECT_SAGA', createProjectSaga);\r\n}\r\n\r\n\r\n\r\n\r\n//Saga dùng để get all project từ api \r\n//Khải - Code ngày dd/MM/yyyy\r\n\r\nfunction *getListProjectSaga(action) { \r\n\r\n    try {\r\n        const {data,status} = yield call( () => cyberbugsService.getListProject());\r\n \r\n        //Sau khi lấy dữ liệu từ api về thành công\r\n        if(status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type:'GET_LIST_PROJECT',\r\n                projectList:data.content\r\n            })\r\n\r\n\r\n         \r\n        }\r\n    }catch(err) {\r\n        console.log(err)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function* theoDoiGetListProjectSaga() {\r\n    yield takeLatest('GET_LIST_PROJECT_SAGA', getListProjectSaga);\r\n}\r\n\r\n//UpdateProject\r\nfunction* updateProjectSaga(action) {\r\n    // console.log('action123',action);\r\n    // return;\r\n    //HIỂN THỊ LOADING\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay (500);\r\n\r\n    try {\r\n\r\n        \r\n        const { data, status } = yield call(() => cyberbugsService.updateProject(action.prjectUpdate));\r\n        //Gọi api thành công thì dispatch lên reducer thông qua put\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            console.log(data)\r\n\r\n            // history.push('/projectmanagement');\r\n        }\r\n        // yield put({\r\n        //     type:'GET_LIST_PROJECT_SAGA'\r\n        // })\r\n        yield call(getListProjectSaga);\r\n        yield put({\r\n            type:'CLOSE_DRAWER'\r\n        })\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n   \r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\nexport function* theoDoiUpdateProjectSaga() {\r\n    yield takeLatest('UPDATE_PROJECT_SAGA', updateProjectSaga);\r\n}\r\n\r\n\r\n\r\n\r\n//UpdateProject\r\nfunction* deleteProjectSaga(action) {\r\n    // console.log('action123',action);\r\n    // return;\r\n    //HIỂN THỊ LOADING\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay (500);\r\n\r\n    try {\r\n        const { data, status } = yield call(() => projectService.deleteProject(action.idProject));\r\n        //Gọi api thành công thì dispatch lên reducer thông qua put\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            console.log(data)\r\n\r\n            notifiFunction('success','Delete project successfully !')\r\n\r\n            // history.push('/projectmanagement');\r\n        }else {\r\n            notifiFunction('error','Delete project fail !')\r\n        }\r\n        // yield put({\r\n        //     type:'GET_LIST_PROJECT_SAGA'\r\n        // })\r\n        yield call(getListProjectSaga);\r\n        yield put({\r\n            type:'CLOSE_DRAWER'\r\n        })\r\n    } catch (err) {\r\n        notifiFunction('error','Delete project fail !')\r\n        console.log(err);\r\n    }\r\n   \r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\nexport function* theoDoiDeleteProject() {\r\n    yield takeLatest('DELETE_PROJECT_SAGA', deleteProjectSaga);\r\n}\r\n\r\n\r\n\r\n\r\nfunction* getProjectDetailSaga(action) {\r\n    // console.log('action123',action);\r\n    // return;\r\n    //HIỂN THỊ LOADING\r\n    // yield put({\r\n    //     type: DISPLAY_LOADING\r\n    // })\r\n    yield delay (500);\r\n\r\n    try {\r\n        const { data, status } = yield call(() => projectService.getProjectDetail(action.projectId));\r\n        \r\n        console.log('data',data);\r\n        //Lấy dữ liệu thành công thì đưa dữ liệu lên redux\r\n        yield put({\r\n            type:'PUT_PROJECT_DETAIL',\r\n            projectDetail:data.content\r\n        })\r\n    \r\n    } catch (err) {\r\n        console.log('404 not found !')\r\n        history.push('/projectmanagement');\r\n    }\r\n   \r\n    // yield put({\r\n    //     type: HIDE_LOADING\r\n    // })\r\n}\r\n\r\nexport function* theoDoiGetProjectDetail() {\r\n    yield takeLatest('GET_PROJECT_DETAIL', getProjectDetailSaga);\r\n}\r\n\r\n\r\n\r\nfunction* getProjectAllSaga(action) {\r\n    // console.log('action123',action);\r\n    // return;\r\n    //HIỂN THỊ LOADING\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay (500);\r\n\r\n    try {   \r\n        const { data, status } = yield call(() => projectService.getAllProject());\r\n        \r\n      \r\n        //Lấy dữ liệu thành công thì đưa dữ liệu lên redux\r\n        yield put({\r\n            type:GET_ALL_PROJECT,\r\n            arrProject:data.content\r\n        })\r\n\r\n        yield put({\r\n            type:GET_USER_BY_PROJECT_ID_SAGA,\r\n            idProject:data.content[0].id\r\n        })\r\n    \r\n    } catch (err) {\r\n        console.log('404 not found !')\r\n        history.push('/projectmanagement');\r\n    }\r\n   \r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\nexport function* theoDoiGetAllProjectSaga() {\r\n    yield takeLatest(GET_ALL_PROJECT_SAGA, getProjectAllSaga);\r\n}\r\n\r\n","import { baseService } from \"./baseService\";\r\n\r\nexport class TaskTypeService extends baseService {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n    getAllTaskType = () => {\r\n        return this.get('TaskType/getAll');\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const taskTypeService = new TaskTypeService();\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { taskTypeService } from \"../../../services/TaskTypeService\";\r\nimport { GET_ALL_TASK_TYPE, GET_ALL_TASK_TYPE_SAGA } from \"../../constants/Cyberbugs/TaskTypeConstants\";\r\n\r\nfunction * getAllTaskTypeSaga (action) {\r\n\r\n    try {\r\n        const {data,status} = yield call(()=> taskTypeService.getAllTaskType());\r\n\r\n        yield put({\r\n            type: GET_ALL_TASK_TYPE,\r\n            arrTaskType:data.content\r\n        })\r\n\r\n\r\n\r\n    }catch (err) {\r\n        console.log(err);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport function * theoDoiGetAllTaskTypeSaga () {\r\n    yield takeLatest(GET_ALL_TASK_TYPE_SAGA,getAllTaskTypeSaga)\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class PriorityService extends baseService {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    getAllPriority = () => {\r\n        return this.get(`Priority/getAll`);\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\n\r\nexport const priorityService = new PriorityService();\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { priorityService } from \"../../../services/PriorityService\";\r\nimport { GET_ALL_PRIORITY, GET_ALL_PRIORITY_SAGA } from \"../../constants/Cyberbugs/PriorityConstants\";\r\n\r\nfunction * getAllPrioritySaga(action) {\r\n    try {\r\n        const {data,status} = yield call(()=> priorityService.getAllPriority());\r\n\r\n        yield put({type:GET_ALL_PRIORITY,arrPriority:data.content});\r\n\r\n\r\n    }catch(err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function * theoDoiGetAllPriority() {\r\n    yield takeLatest(GET_ALL_PRIORITY_SAGA,getAllPrioritySaga)\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class TaskService extends baseService {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n    createTask = (taskObject) => {\r\n        return this.post('Project/createTask', taskObject);\r\n    }\r\n\r\n\r\n    getTaskDetail = (taskId) => {\r\n        return this.get(`Project/getTaskDetail?taskId=${taskId}`)\r\n    }\r\n\r\n    updateStatusTask = (taskStatusUpdate) => {\r\n        return this.put(`Project/updateStatus`, taskStatusUpdate);\r\n    }\r\n    updateTask = (taskUpdate) => {\r\n        return this.post(`Project/updateTask`, taskUpdate);\r\n    }\r\n}\r\n\r\n\r\nexport const taskService = new TaskService();","import { call, put, select, takeLatest } from 'redux-saga/effects'\r\nimport { taskService } from '../../../services/TaskService'\r\nimport { STATUS_CODE } from '../../../util/constants/settingSystem';\r\nimport { notifiFunction } from '../../../util/Notification/notificationCyberbugs'\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../../constants/LoadingConst';\r\nimport { HANDLE_CHANGE_POST_API_SAGA, GET_TASK_DETAIL_SAGA, GET_TASK_DETAIL, UPDATE_STATUS_TASK_SAGA, UPDATE_TASK_SAGA, CHANGE_TASK_MODAL, CHANGE_ASSIGNESS, REMOVE_USER_ASSIGN } from '../../constants/Cyberbugs/TaskConstants'\r\nfunction* createTaskSaga(action) {\r\n\r\n    try {\r\n        yield put({\r\n            type: DISPLAY_LOADING\r\n        })\r\n        const { data, status } = yield call(() => taskService.createTask(action.taskObject));\r\n\r\n        //Gọi api thành công thì dispatch lên reducer thông qua put\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            console.log(data)\r\n\r\n        }\r\n        yield put({\r\n            type: 'CLOSE_DRAWER'\r\n        })\r\n        notifiFunction('success', 'Create task successfully !');\r\n    }\r\n    catch (err) {\r\n        console.log(err.response.data)\r\n    }\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\nexport function* theoDoiCreateTaskSaga() {\r\n    yield takeLatest('CREATE_TASK_SAGA', createTaskSaga);\r\n}\r\n\r\n\r\n\r\n\r\nfunction* getTaskDetailSaga(action) {\r\n\r\n    const { taskId } = action;\r\n    try {\r\n        const { data, status } = yield call(() => taskService.getTaskDetail(taskId));\r\n\r\n        yield put({\r\n            type: GET_TASK_DETAIL,\r\n            taskDetailModal: data.content\r\n        })\r\n\r\n    } catch (err) {\r\n\r\n        console.log(err);\r\n        console.log(err.response?.data);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiGetTaskDetailSaga(action) {\r\n\r\n    yield takeLatest(GET_TASK_DETAIL_SAGA, getTaskDetailSaga)\r\n\r\n}\r\n\r\n//update task \r\n\r\nfunction* updateTaskStatusSaga(action) {\r\n\r\n    const { taskUpdateStatus } = action;\r\n    console.log(action)\r\n    try {\r\n\r\n        //Cập nhật api status cho task hiện tại (Task đang mở modal)\r\n        const { data, status } = yield call(() => taskService.updateStatusTask(taskUpdateStatus));\r\n\r\n        //Sau khi thành công gọi lại getProjectDetail saga để sắp xếp lại thông tin các task \r\n        // console.log(data)\r\n        if (status == STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: 'GET_PROJECT_DETAIL',\r\n                projectId: taskUpdateStatus.projectId\r\n            })\r\n\r\n            yield put({\r\n                type: GET_TASK_DETAIL_SAGA,\r\n                taskId: taskUpdateStatus.taskId\r\n            })\r\n        }\r\n\r\n\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data);\r\n\r\n    }\r\n}\r\n\r\nexport function* theoDoiUpdateTaskStatusSaga() {\r\n    yield takeLatest(UPDATE_STATUS_TASK_SAGA, updateTaskStatusSaga)\r\n}\r\n\r\n\r\n\r\n\r\nfunction* updateTaskSaga(action) {\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport function* theoDoiUdpateTask() {\r\n    yield takeLatest(UPDATE_TASK_SAGA, updateTaskSaga);\r\n}\r\n\r\n\r\n\r\n\r\nexport function* handelChangePostApi(action) {\r\n    // console.log('abc', action)\r\n    //Gọi action làm thay đổi taskDetail modal\r\n    switch (action.actionType) {\r\n        case CHANGE_TASK_MODAL: {\r\n            const { value, name } = action;\r\n\r\n            yield put({\r\n                type: CHANGE_TASK_MODAL,\r\n                name,\r\n                value\r\n            });\r\n        }; break;\r\n        case CHANGE_ASSIGNESS: {\r\n            const { userSelected } = action;\r\n            yield put({\r\n                type: CHANGE_ASSIGNESS,\r\n                userSelected\r\n            })\r\n\r\n        }; break;\r\n        case REMOVE_USER_ASSIGN: {\r\n            const { userId } = action;\r\n            yield put({\r\n                type: REMOVE_USER_ASSIGN,\r\n                userId\r\n            })\r\n        } break;\r\n        default:\r\n    }\r\n\r\n    //Save qua api updateTaskSaga\r\n    //Lây dữ liệu từ state.taskDetailModal \r\n    let { taskDetailModal } = yield select(state => state.TaskReducer);\r\n    console.log('taskDetailModal sau khi thay đổi', taskDetailModal)\r\n    //Biến đổi dữ liệu state.taskDetailModal thành dữ liệu api cần\r\n\r\n    const listUserAsign = taskDetailModal.assigness?.map((user, index) => {\r\n        return user.id;\r\n    });\r\n\r\n\r\n    const taskUpdateApi = { ...taskDetailModal, listUserAsign }\r\n    try {\r\n        const { data, status } = yield call(() => taskService.updateTask(taskUpdateApi));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: 'GET_PROJECT_DETAIL',\r\n                projectId: taskUpdateApi.projectId\r\n            })\r\n\r\n            yield put({\r\n                type: GET_TASK_DETAIL_SAGA,\r\n                taskId: taskUpdateApi.taskId\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err.response?.data);\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n\r\nexport function* theoDoiHandleChangePostApi() {\r\n    yield takeLatest(HANDLE_CHANGE_POST_API_SAGA, handelChangePostApi);\r\n}\r\n","\r\nimport { baseService } from './baseService';\r\n\r\nexport class CommentService extends baseService {\r\n    constructor() {\r\n        super();\r\n    }\r\n    getAllComment = (taskId) => {\r\n        return this.get(`/Comment/getAll?taskId=${taskId}`)\r\n    }\r\n    deleteComment = (commentId) => {\r\n        return this.delete(`Comment/deleteComment?idComment=${commentId}`)\r\n    }\r\n    insertComment = (newComnent) => {\r\n        return this.post(\"Comment/insertComment\", newComnent)\r\n    }\r\n    updateComment = (commentId, newCommentContent) => {\r\n        return this.put(`Comment/updateComment?id=${commentId}&contentComment=${newCommentContent}`)\r\n    }\r\n}\r\n\r\nexport const commentService = new CommentService();\r\n","import { call, delay, put, takeLatest } from \"redux-saga/effects\";\r\nimport { commentService } from \"../../../services/CommentService\";\r\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\r\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\r\nimport { DELETE_COMMENT_SAGA, GET_ALL_COMMENT, GET_ALL_COMMENT_SAGA, INSERT_COMMENT_SAGA, UPDATE_COMMENT_SAGA } from \"../../constants/Cyberbugs/CommentConstants\";\r\nimport { UPDATE_STATUS_TASK_SAGA } from \"../../constants/Cyberbugs/TaskConstants\";\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\r\n\r\n\r\n//Hàm dùng để call service để lấy tất cả comment từ  taskId\r\nexport function* getAllCommentByTaskId(taskId) {\r\n    try {\r\n        const { data, status } = yield call(() => commentService.getAllComment(taskId));\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_ALL_COMMENT,\r\n                commentList: data.content\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n//Saga dùng để get all comment từ api\r\nexport function* getAllCommentSaga(action) {\r\n    const { taskId } = action;\r\n    yield call(getAllCommentByTaskId, taskId);\r\n}\r\n\r\nexport function* theoDoigetAllCommentSaga() {\r\n    yield takeLatest(GET_ALL_COMMENT_SAGA, getAllCommentSaga)\r\n}\r\n\r\n//saga dùng để delete comment từ api\r\nexport function* deleteCommentSaga(action) {\r\n    const { taskId, commentId } = action;\r\n    try {\r\n        const { data, status } = yield call(() => commentService.deleteComment(commentId));\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            notifiFunction('success', 'Delete comment successfully !')\r\n            yield call(getAllCommentByTaskId, taskId);\r\n        }\r\n        else {\r\n            notifiFunction('error', 'Delete comment fail !')\r\n        }\r\n    } catch (error) {\r\n        notifiFunction('error', 'Delete comment fail !')\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport function* theoDoideleteCommentSaga() {\r\n    yield takeLatest(DELETE_COMMENT_SAGA, deleteCommentSaga)\r\n}\r\n\r\n//Saga dùng để thêm comment\r\nexport function* insertCommentSaga(action) {\r\n    const { newComnent } = action;\r\n    const { taskId } = newComnent;\r\n    try {\r\n        const { status, data } = yield call(() => commentService.insertComment(newComnent));\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            notifiFunction('success', 'Insert comment successfully !')\r\n            yield call(getAllCommentByTaskId, taskId);\r\n        }\r\n        else {\r\n            notifiFunction('error', 'Insert comment fail !')\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport function* theoDoiinsertCommentSaga() {\r\n    yield takeLatest(INSERT_COMMENT_SAGA, insertCommentSaga)\r\n}\r\n\r\n//Saga dùng để update comment\r\nexport function* updateCommentSaga(action) {\r\n    const { taskId, commentId, newCommentContent } = action;\r\n    console.log(taskId, commentId, newCommentContent)\r\n    try {\r\n        const { status, data } = yield call(() => commentService.updateComment(commentId, newCommentContent));\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield call(getAllCommentByTaskId, taskId);\r\n            console.log(data.message)\r\n        }\r\n        else {\r\n            notifiFunction('error', 'Update comment fail !')\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response?.data);\r\n        notifiFunction('error', error.response?.data.message)\r\n    }\r\n}\r\n\r\nexport function* theoDoiupdateCommentSaga() {\r\n    yield takeLatest(UPDATE_COMMENT_SAGA, updateCommentSaga)\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class StatusService extends baseService {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    getAllStatus = () => {\r\n        return this.get(`Status/getAll`)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const statusService = new StatusService();\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { statusService } from \"../../../services/StatusService\";\r\nimport { GET_ALL_STATUS, GET_ALL_STATUS_SAGA } from \"../../constants/Cyberbugs/StatusConstant\";\r\n\r\nfunction * getAllStatusSaga (action) {\r\n\r\n    try {\r\n        const {data,status} = yield call(()=> statusService.getAllStatus());\r\n\r\n        yield put({\r\n            type: GET_ALL_STATUS,\r\n            arrStatus:data.content\r\n        })\r\n\r\n\r\n    }catch(err) {\r\n        console.log(err);\r\n        console.log(err.response?.data)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function *theoDoiGetAllStatusSaga() {\r\n\r\n    yield takeLatest(GET_ALL_STATUS_SAGA, getAllStatusSaga)\r\n\r\n}","import { all } from \"redux-saga/effects\";\r\nimport Todolist from \"../../pages/Todolist/Todolist\";\r\nimport TodolistRFC from \"../../pages/Todolist/TodolistRFC\";\r\nimport * as ToDoListSaga from './ToDoListSaga'\r\n// import {theoDoiActionGetTaskApi} from './ToDoListSaga'\r\nimport * as Cyberbugs from './Cyberbugs/UserCyberbugsSaga';\r\nimport * as ProjectCategorySaga from './Cyberbugs/ProjectCategorySaga';\r\nimport * as ProjectSaga from './Cyberbugs/ProjectSaga';\r\nimport * as TaskTypeSaga from './Cyberbugs/TaskTypeSaga';\r\nimport * as PrioritySaga from './Cyberbugs/PrioritySaga';\r\nimport * as TaskSaga from './Cyberbugs/TaskSaga';\r\nimport * as CommentSaga from './Cyberbugs/CommentSaga';\r\nimport * as StatusSaga from './Cyberbugs/StatusSaga'\r\nimport { cyberbugsService } from \"../../services/CyberbugsService\";\r\n\r\nexport function* rootSaga() {\r\n\r\n  yield all([\r\n    //Nghiệp vụ theo dõi các action saga todolist\r\n    ToDoListSaga.theoDoiActionGetTaskApi(),\r\n    ToDoListSaga.theoDoiActionAddTaskApi(),\r\n    ToDoListSaga.theoDoiActionDeleteTask(),\r\n    ToDoListSaga.theoDoiDoneTask(),\r\n    ToDoListSaga.theoDoiRejectTask(),\r\n    \r\n    //Nghiệp vụ cyberbugs .... ,\r\n    Cyberbugs.theoDoiSignin(),\r\n    Cyberbugs.theoDoiGetUser(),\r\n    Cyberbugs.theoDoiRemoveUserProject(),\r\n    Cyberbugs.theoDoiAddUserProject(),\r\n    Cyberbugs.theoDoiGetUserByProjectIdSaga(),\r\n    \r\n    //Nghiep vu quan ly users\r\n    Cyberbugs.theoDoiSignupUser(),\r\n    Cyberbugs.theoDoiGetAllUserSaga(),\r\n    Cyberbugs.theoDoiEditUserSaga(),\r\n    Cyberbugs.theoDoiDeleteUserSaga(),\r\n\r\n    ProjectCategorySaga.theoDoigetAllProjectCategory(),\r\n    ProjectSaga.theoDoiCreateProjectSaga(),\r\n    ProjectSaga.theoDoiGetListProjectSaga(),\r\n    ProjectSaga.theoDoiUpdateProjectSaga(),\r\n    ProjectSaga.theoDoiDeleteProject(),\r\n    ProjectSaga.theoDoiGetProjectDetail(),\r\n    ProjectSaga.theoDoiGetAllProjectSaga(),\r\n    StatusSaga.theoDoiGetAllStatusSaga(),\r\n\r\n    TaskTypeSaga.theoDoiGetAllTaskTypeSaga(),\r\n    PrioritySaga.theoDoiGetAllPriority(),\r\n\r\n    TaskSaga.theoDoiCreateTaskSaga(),\r\n    TaskSaga.theoDoiGetTaskDetailSaga(),\r\n    TaskSaga.theoDoiUpdateTaskStatusSaga(),\r\n    TaskSaga.theoDoiHandleChangePostApi(),\r\n    TaskSaga.theoDoiUdpateTask(),\r\n\r\n    CommentSaga.theoDoigetAllCommentSaga(),\r\n    CommentSaga.theoDoideleteCommentSaga(),\r\n    CommentSaga.theoDoiinsertCommentSaga(),\r\n    CommentSaga.theoDoiupdateCommentSaga()\r\n  ])\r\n\r\n\r\n}","\r\n\r\n\r\nconst historyState = {\r\n    history:{}\r\n};\r\n\r\n\r\n\r\nexport const HistoryReducer = (state = historyState,action) => {\r\n    switch(action.type) {\r\n        case 'ADD_HISTORY':{\r\n            state.history = action.history;\r\n            console.log(state.history);\r\n            return {...state}\r\n        }\r\n        default: return {...state}\r\n    }\r\n}","import { USLOGIN } from \"../constants/Cyberbugs/Cyberbugs\";\r\nimport { GET_ALL_USER, GET_USER_BY_PROJECT_ID } from \"../constants/Cyberbugs/UsersContants\";\r\n\r\nconst { USER_LOGIN } = require(\"../../util/constants/settingSystem\");\r\n\r\nlet usLogin = {};\r\n\r\nif(localStorage.getItem(USER_LOGIN)) {\r\n    usLogin = JSON.parse(localStorage.getItem(USER_LOGIN));\r\n}\r\n\r\n\r\n\r\n\r\nconst stateDefault =  {\r\n    userLogin : usLogin,\r\n    userSearch: [],\r\n    arrUser:[],//Array user cho thẻ select create task\r\n}\r\n\r\n\r\n\r\nexport const UserLoginCyberBugsReducer = (state = stateDefault,action) => {\r\n    switch(action.type) {\r\n        case USLOGIN: {\r\n            state.userLogin = action.userLogin;\r\n            return {...state}\r\n        }\r\n\r\n        case 'GET_USER_SEARCH' :{\r\n            state.userSearch = action.lstUserSearch;\r\n            console.log('stateUser',state);\r\n            return {...state}\r\n        }\r\n        case GET_USER_BY_PROJECT_ID: {\r\n            return  {...state,arrUser:action.arrUser}\r\n        }\r\n        case GET_ALL_USER:{\r\n            return {...state, arrUser: action.arrUser}\r\n        }\r\n        default : return {...state};\r\n    }\r\n}","import { GET_ALL_PROJECT_CATEGORY } from \"../constants/Cyberbugs/Cyberbugs\";\r\n\r\n\r\nconst stateDefault = {\r\n    arrProjectCategory : []\r\n}\r\n\r\n\r\n\r\n\r\nexport const ProjectCategoryReducer = (state = stateDefault,action) => {\r\n    switch(action.type){\r\n\r\n        case GET_ALL_PROJECT_CATEGORY: {\r\n            state.arrProjectCategory = action.data;\r\n            return {...state}\r\n        }\r\n\r\n\r\n        default : return {...state}\r\n    }\r\n}","import { GET_ALL_PROJECT } from \"../constants/Cyberbugs/ProjectCyberBugsConstants\";\r\n\r\n\r\nconst stateDefault = {\r\n    projectList: [],\r\n    arrProject: [] //Get allproject cho dropdown\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const ProjectCyberBugsReducer = (state = stateDefault,action) => {\r\n\r\n\r\n    switch(action.type){\r\n\r\n        case 'GET_LIST_PROJECT': {\r\n                state.projectList = action.projectList;\r\n                console.log(\"projectList\",action.projectList)\r\n                return {...state};\r\n        }\r\n\r\n        case GET_ALL_PROJECT : {\r\n            // state.arrProject = action.arrProject;\r\n            return {...state,arrProject:action.arrProject}\r\n        }\r\n\r\n        default: return {...state}\r\n    }\r\n}","import React from 'react'\r\nconst initialState = {\r\n    visible: false,\r\n    title:'',\r\n    ComponentContentDrawer: <p>default</p>,\r\n    callBackSubmit: (propsValue) => { alert('click demo!') }\r\n}\r\n\r\nexport const drawerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'OPEN_DRAWER':\r\n            return { ...state, visible: true }\r\n        case 'CLOSE_DRAWER':\r\n            return { ...state, visible: false }\r\n        case 'OPEN_FORM_EDIT_PROJECT': {\r\n            state.visible = true;\r\n            state.ComponentContentDrawer = action.Component;\r\n            state.title = action.title;\r\n            return { ...state }\r\n\r\n        }\r\n        case 'SET_SUBMIT_EDIT_PROJECT': {\r\n            state.callBackSubmit = action.submitFunction;\r\n            return {...state};\r\n        }\r\n\r\n        case 'SET_SUBMIT_CREATE_TASK' : {\r\n            return {...state,callBackSubmit:action.submitFunction}\r\n        }\r\n\r\n        case 'OPEN_FORM_CREATE_TASK' : {\r\n            state.visible = true;\r\n            state.title = action.title;\r\n            state.ComponentContentDrawer = action.Component;\r\n            return {...state};\r\n\r\n        }\r\n        case 'OPEN_FORM_EDIT_USER':{\r\n            state.visible = true;\r\n            state.title = action.title;\r\n            state.ComponentContentDrawer = action.Component;\r\n            return {...state};\r\n        }\r\n        case 'SET_SUBMIT_FORM_EDIT_USER':{\r\n            return {...state,callBackSubmit:action.submitFunction}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","\r\nconst initialState = {\r\n    projectEdit: {\r\n        \"id\": 0,\r\n        \"projectName\": \"string\",\r\n        \"creator\": 0,\r\n        \"description\": \"string\",\r\n        \"categoryId\": \"2\"\r\n      },\r\n    projectDetail:{\r\n        \r\n    }\r\n}\r\n\r\nexport const ProjectReducer =  (state = initialState,  action) => {\r\n    switch (action.type) {\r\n    \r\n    case  'EDIT_PROJECT': {\r\n        state.projectEdit = action.projectEditModel;\r\n        return {...state}\r\n\r\n    }\r\n    case 'PUT_PROJECT_DETAIL': {\r\n        state.projectDetail = action.projectDetail;\r\n        return {...state}\r\n    } \r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { GET_ALL_TASK_TYPE } from \"../constants/Cyberbugs/TaskTypeConstants\"\r\n\r\nconst initialState = {\r\n    arrTaskType: []\r\n}\r\n\r\nexport const TaskTypeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case GET_ALL_TASK_TYPE:\r\n        return { ...state, arrTaskType:action.arrTaskType }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { GET_ALL_PRIORITY } from \"../constants/Cyberbugs/PriorityConstants\"\r\n\r\nconst initialState = {\r\n    arrPriority : []\r\n}\r\n\r\nexport const PriorityReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case GET_ALL_PRIORITY:\r\n        return { ...state,arrPriority:action.arrPriority }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { GET_ALL_STATUS } from \"../constants/Cyberbugs/StatusConstant\"\r\n\r\nconst initialState = {\r\n    arrStatus:[]\r\n}\r\n\r\nexport const StatusReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case GET_ALL_STATUS:\r\n\r\n        // state.arrStatus = action.arrStatus;\r\n        return { ...state,arrStatus :action.arrStatus }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { CHANGE_ASSIGNESS, CHANGE_TASK_MODAL, GET_TASK_DETAIL, REMOVE_USER_ASSIGN } from \"../constants/Cyberbugs/TaskConstants\"\r\n\r\nconst initialState = {\r\n    taskDetailModal:  {\r\n      \"priorityTask\": {\r\n        \"priorityId\": 1,\r\n        \"priority\": \"High\"\r\n      },\r\n      \"taskTypeDetail\": {\r\n        \"id\": 1,\r\n        \"taskType\": \"bug\"\r\n      },\r\n      \"assigness\": [\r\n        {\r\n          \"id\": 68,\r\n          \"avatar\": \"https://ui-avatars.com/api/?name=khải\",\r\n          \"name\": \"khải\",\r\n          \"alias\": \"khai\"\r\n        },\r\n        {\r\n          \"id\": 69,\r\n          \"avatar\": \"https://ui-avatars.com/api/?name=thoa\",\r\n          \"name\": \"thoa\",\r\n          \"alias\": \"thoa\"\r\n        }\r\n      ],\r\n      \"lstComment\": [],\r\n      \"taskId\": 54,\r\n      \"taskName\": \"task 1\",\r\n      \"alias\": \"task-1\",\r\n      \"description\": \"<p>Before you start work on an issue, you can set a time or other type of estimate to calculate how much work you believe it'll take to resolve it. Once you've started to work on a specific issue, log time to keep a record of it.</p>\\n<p>&nbsp;</p>\\n<ul>\\n<li>Open the issue and select&nbsp;&bull;&bull;&bull; &gt;&nbsp;Time tracking</li>\\n<li>Fill in the<strong>&nbsp;Time Spent</strong>&nbsp;field</li>\\n<li>Fill in the <strong>Time Remaining</strong> field and click Save</li>\\n</ul>\\n<p>&nbsp;</p>\\n<h3><u>That's it!</u></h3>\\n<h1>💯💯</h1>\\n<p>&nbsp;</p>\",\r\n      \"statusId\": \"2\",\r\n      \"originalEstimate\": 30,\r\n      \"timeTrackingSpent\": 10,\r\n      \"timeTrackingRemaining\": 10,\r\n      \"typeId\": 1,\r\n      \"priorityId\": 1,\r\n      \"projectId\": 109\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const TaskReducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n\r\n    case GET_TASK_DETAIL: {\r\n        console.log(action.taskDetailModal);\r\n        return {...state,taskDetailModal:action.taskDetailModal}\r\n    }\r\n    case CHANGE_TASK_MODAL: {\r\n      const {name,value} = action;\r\n      console.log('value',value)\r\n      // console.log(state.taskDetailModal)\r\n      return {...state,taskDetailModal: {...state.taskDetailModal,[name]:value}}\r\n    }\r\n\r\n    case CHANGE_ASSIGNESS : {\r\n\r\n      state.taskDetailModal.assigness = [...state.taskDetailModal.assigness,action.userSelected];\r\n      // console.log('state',state)\r\n      return {...state}\r\n    }\r\n\r\n    case REMOVE_USER_ASSIGN:{\r\n\r\n      state.taskDetailModal.assigness = [...state.taskDetailModal.assigness.filter(us => us.id !== action.userId)]\r\n      return {...state}\r\n    }\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { GET_ALL_COMMENT } from \"../constants/Cyberbugs/CommentConstants\"\r\n\r\nconst initialState = {\r\n    commentList: []\r\n}\r\n\r\nexport const CommentReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_COMMENT: {\r\n            return { ...state, commentList: action.commentList }\r\n        }\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport ToDoListReducer from './reducers/ToDoListReducer'\r\nimport LoadingReducer from './reducers/LoadingReducer';\r\nimport {ModalReducer} from './reducers/ModalReducer'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\n\r\n//middleware saga\r\nimport createMiddleWareSaga from 'redux-saga';\r\nimport { rootSaga } from './sagas/rootSaga';\r\nimport { HistoryReducer } from './reducers/HistoryReducer';\r\nimport { UserLoginCyberBugsReducer } from './reducers/UserCyberBugsReducer';\r\nimport { ProjectCategoryReducer } from './reducers/ProjectCategoryReducer';\r\nimport { ProjectCyberBugsReducer } from './reducers/ProjectCyberBugsReducer';\r\nimport { drawerReducer } from './reducers/DrawerCyberbugs';\r\nimport { ProjectReducer } from './reducers/ProjectReducer';\r\nimport { TaskTypeReducer } from './reducers/TaskTypeReducer';\r\nimport { PriorityReducer } from './reducers/PriorityReducer';\r\nimport { StatusReducer } from './reducers/StatusReducer';\r\nimport {TaskReducer} from './reducers/TaskReducer';\r\nimport { CommentReducer } from './reducers/CommentReducer';\r\n\r\nconst middleWareSaga = createMiddleWareSaga();\r\nconst rootReducer = combineReducers({\r\n    //reducer khai báo tại đây\r\n    ToDoListReducer,\r\n    LoadingReducer,\r\n    ModalReducer,\r\n    HistoryReducer,\r\n    UserLoginCyberBugsReducer,\r\n    ProjectCategoryReducer,\r\n    ProjectCyberBugsReducer,\r\n    drawerReducer,\r\n    ProjectReducer,\r\n    TaskTypeReducer,\r\n    PriorityReducer,\r\n    StatusReducer,\r\n    TaskReducer,\r\n    CommentReducer\r\n})\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(reduxThunk,middleWareSaga));\r\n\r\n//Gọi saga\r\nmiddleWareSaga.run(rootSaga);\r\n\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//setup redux\r\nimport store from './redux/configStore'\r\nimport { Provider } from 'react-redux';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport { BrowserRouter,Router } from 'react-router-dom';\r\nimport {history} from './util/history'\r\n\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>\r\n  ,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}